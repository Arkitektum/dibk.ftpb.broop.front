{"version":3,"sources":["components/template/Container.module.scss","constants/types.js","reducers/CodelistFunksjonReducer.js","reducers/CodelistTiltaksklasseReducer.js","reducers/SelectedFormReducer.js","reducers/SelectedSubmissionReducer.js","reducers/index.js","utils/configureStore.js","components/template/Container.js","actions/SubmissionActions.js","components/routes/Home.js","components/partials/Forms/FormParts/AnsvarIByggeProsjekt.js","actions/CodelistActions.js","components/partials/Forms/FormParts/AnsvarligSoeker.js","helpers/formatHelpers.js","components/partials/Forms/FormParts/EiendomByggested.js","components/partials/Forms/FormParts/Erklaering.js","components/partials/Forms/FormParts/Foretak.js","components/partials/Forms/DistribuertAnsvarsrett.js","actions/FormActions.js","components/routes/Forms/FormType/Form.js","components/routes/NotFound.js","components/partials/MainNavigationBar.js","App.js","serviceWorker.js","components/config.js","components/ConfigLoader.js","index.js","components/partials/Forms/Forms.module.scss"],"names":["module","exports","FETCH_CODELIST_FUNSKJON","FETCH_CODELIST_TILTAKSKLASSE","FETCH_SUBMISSION","UPDATE_SELECTED_FORM","initialState","reducer","state","action","type","payload","reducers","history","combineReducers","router","connectRouter","codelistFunksjon","CodelistFunksjonReducer","codelistTiltaksklasse","CodelistTiltaksklasseReducer","selectedForm","SelectedFormReducer","selectedSubmission","SelectedSubmissionReducer","createBrowserHistory","composeEnhancers","composeWithDevTools","ContentContainer","className","style","container","this","props","children","Component","connect","fetchSubmission","guid","dispatch","apiUrl","fetch","then","res","json","form","Home","submission","response","setState","Object","keys","length","Container","to","innsendingsType","referanseId","content","mapDispatchToProps","AnsvarIByggeProsjekt","hasCodelistFunksjon","hasCodelistTiltaksklasse","fetchCodelistFunksjon","fetchCodelistTiltaksklasse","value","property","index","updatedAnsvarsomraader","ansvarsomraader","onChange","selectedOptionValue","selectedCodelistItem","containeditems","find","item","codevalue","kodeverdi","kodebeskrivelse","label","handleOnChange","map","key","ansvarsomraade","formsStyle","inputGroup","flex50","id","event","handleFunksjonOnChange","target","funksjon","options","convertCodelistFunksjonToOptionValues","beskrivelseAvAnsvarsomraade","flexAuto","handleTiltaksklasseOnChange","tiltaksklasse","convertCodelistTiltaksklasseToOptionValues","fieldset","checked","samsvarKontrollVedRammetillatelse","samsvarKontrollVedIgangsettingstillatelse","samsvarKontrollVedMidlertidigBrukstillatelse","samsvarKontrollVedFerdigattest","name","inputValue","dekkesOmraadeAvSentralGodkjenningSpecified","codelist","AnsvarligSoeker","ansvarligSoeker","fieldList","organisasjonsnummer","navn","flex100","kontaktperson","telefonnummer","mobilnummer","epost","formatAddress","address","formattedAddress","adresselinje1","postnr","poststed","EiendomByggested","eiendomByggested","eiendomByggestedListItem","flex25","eiendomsidentifikasjon","gaardsnummer","bruksnummer","festenummer","seksjonsnummer","bygningsnummer","bolignummer","kommunenummer","adresse","Erklaering","ansvarsrett","Fragment","erklaeringAnsvarligProsjekterende","erklaeringAnsvarligUtfoerende","erklaeringAnsvarligKontrollerende","Foretak","foretak","flex33","flex66","harSentralGodkjenning","DistribuertAnsvarsrett","formApiUrl","_links","ansvarsrettdistribuert","href","updateSelectedForm","hasSelectedSubmission","hasSelectedForm","updateFormDataField","formData","inlineFieldList","kommunensSaksnummer","saksaar","sakssekvensnummer","size","updateAnsvarsomraader","Form","submissionId","match","params","formType","renderForm","NotFound","MainNavigationBar","logoLink","WebFont","load","google","families","store","preloadedState","middleware","thunk","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","App","basename","exact","path","render","Boolean","window","location","hostname","config","ConfigLoader","isLoaded","process","result","newconfig","prop","ready","loading","Main","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.805d1170.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__dTOM0\"};","export const FETCH_CODELIST_FUNSKJON = 'FETCH_CODELIST_FUNSKJON'\nexport const FETCH_CODELIST_TILTAKSKLASSE = 'FETCH_CODELIST_TILTAKSKLASSE'\nexport const FETCH_SUBMISSION = 'FETCH_SUBMISSION';\nexport const UPDATE_SELECTED_FORM = 'UPDATE_SELECTED_FORM';\n","import { FETCH_CODELIST_FUNSKJON } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_CODELIST_FUNSKJON:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import { FETCH_CODELIST_TILTAKSKLASSE } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_CODELIST_TILTAKSKLASSE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import { UPDATE_SELECTED_FORM } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_SELECTED_FORM:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { FETCH_SUBMISSION } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SUBMISSION:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","// Dependencies\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\n// Reducers\nimport CodelistFunksjonReducer from 'reducers/CodelistFunksjonReducer';\nimport CodelistTiltaksklasseReducer from 'reducers/CodelistTiltaksklasseReducer';\nimport SelectedFormReducer from 'reducers/SelectedFormReducer';\nimport SelectedSubmissionReducer from 'reducers/SelectedSubmissionReducer';\n\nconst reducers = history => combineReducers({\n  router: connectRouter(history),\n  codelistFunksjon: CodelistFunksjonReducer,\n  codelistTiltaksklasse: CodelistTiltaksklasseReducer,\n  selectedForm: SelectedFormReducer,\n  selectedSubmission: SelectedSubmissionReducer\n});\n\nexport default reducers;\n","// Dependencies\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\n// Reducers\nimport createRootReducer from 'reducers';\n\n\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunk];\n  const history = createBrowserHistory();\n  const store = createStore(\n\t\tcreateRootReducer(history),\n\t\tpreloadedState,\n\t\tcomposeEnhancers(\n\t\t\tapplyMiddleware(\n\t\t\t\t...middleware,\n\t\t\t\trouterMiddleware(history)\n\t\t\t)\n\t\t)\n\t);\n  return store;\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Stylesheets\nimport style from 'components/template/Container.module.scss';\n\nclass ContentContainer extends Component {\n\n  render() {\n    return (<div className={style.container}>\n      {this.props.children}\n    </div>)\n  }\n}\n\nexport default connect(null, null)(ContentContainer);\n","import { FETCH_SUBMISSION} from 'constants/types';\n\nexport const fetchSubmission = (guid) => dispatch => {\n    const apiUrl = `https://dibk-ftpb-broop-api.azurewebsites.net/api/v1/Innsending?referanseId=${guid}`\n    return fetch(apiUrl).then(res => res.json()).then(form => {\n        return dispatch({ type: FETCH_SUBMISSION, payload: form })\n    });\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n// DIBK Design\nimport { Button } from 'dibk-design';\n\n// Template\nimport Container from 'components/template/Container';\n\n// Actions\nimport { fetchSubmission } from 'actions/SubmissionActions';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submission: null\n    }\n  }\n\n  componentDidMount() {\n    const guid = '24E4920B-DEA0-462E-A481-6F061D3EB2EA'\n    this.props.fetchSubmission(guid).then((response) => {\n      const submission = response?.payload || null;\n      this.setState({ submission });\n    });\n  }\n\n  render() {\n    const submission = this.state.submission;\n    return submission && Object.keys(submission).length \n    ? (<Container>\n      <h1>Home</h1>\n      <Link to={`/Skjema/${submission.innsendingsType}/${submission.referanseId}/`}>\n        <Button content={submission.innsendingsType}></Button>\n      </Link>\n    </Container>)\n    : ''\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  fetchSubmission\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// DIBK Design\nimport { CheckBoxListItem, InputField, RadioButtonListItem, Select } from 'dibk-design';\n\n// Actions\nimport { fetchCodelistFunksjon, fetchCodelistTiltaksklasse } from 'actions/CodelistActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass AnsvarIByggeProsjekt extends Component {\n\n    componentDidMount() {\n        const hasCodelistFunksjon = this.props.codelistFunksjon && Object.keys(this.props.codelistFunksjon).length;\n        const hasCodelistTiltaksklasse = this.props.codelistTiltaksklasse && Object.keys(this.props.codelistTiltaksklasse).length;\n        if (!hasCodelistFunksjon) {\n            this.props.fetchCodelistFunksjon();\n        }\n        if (!hasCodelistTiltaksklasse) {\n            this.props.fetchCodelistTiltaksklasse();\n        }\n    }\n\n    handleOnChange(value, property, index) {\n        let updatedAnsvarsomraader = this.props.ansvarsomraader;\n        updatedAnsvarsomraader[index][property] = value;\n        this.props.onChange(updatedAnsvarsomraader);\n    }\n\n    handleFunksjonOnChange(selectedOptionValue, property, index) {\n        const selectedCodelistItem = this.props.codelistFunksjon?.containeditems.find(item => {\n            return item.codevalue === selectedOptionValue;\n        });\n        if (selectedCodelistItem) {\n            const value = {\n                kodeverdi: selectedCodelistItem.codevalue,\n                kodebeskrivelse: selectedCodelistItem.label\n            }\n            this.handleOnChange(value, property, index);\n        }\n    }\n\n    handleTiltaksklasseOnChange(selectedOptionValue, property, index) {\n        const selectedCodelistItem = this.props.codelistTiltaksklasse?.containeditems.find(item => {\n            return item.codevalue === selectedOptionValue;\n        });\n        if (selectedCodelistItem) {\n            const value = {\n                kodeverdi: selectedCodelistItem.codevalue,\n                kodebeskrivelse: selectedCodelistItem.label\n            }\n            this.handleOnChange(value, property, index);\n        }\n    }\n\n    convertCodelistFunksjonToOptionValues(codelistFunksjon) {\n        return codelistFunksjon?.containeditems?.length\n            ? codelistFunksjon?.containeditems.map(item => {\n                return {\n                    key: item.label,\n                    value: item.codevalue\n                }\n            }) : []\n    }\n\n    convertCodelistTiltaksklasseToOptionValues(codelistTiltaksklasse) {\n        return codelistTiltaksklasse?.containeditems?.length\n            ? codelistTiltaksklasse?.containeditems.map(item => {\n                return {\n                    key: item.label,\n                    value: item.codevalue\n                }\n            }) : []\n    }\n\n    render() {\n        const ansvarsomraader = this.props.ansvarsomraader;\n        return ansvarsomraader?.length\n            ? ansvarsomraader.map((ansvarsomraade, index) => {\n                return (<div key={index}>\n                    <div className={formsStyle.inputGroup}>\n                        <div className={formsStyle.flex50}>\n                            <Select\n                                id={`ansvarsomraade-${index}-funksjon`}\n                                onChange={(event) => { this.handleFunksjonOnChange(event.target.value, 'funksjon', index) }}\n                                label=\"Funksjon\"\n                                value={ansvarsomraade.funksjon?.kodeverdi}\n                                options={this.convertCodelistFunksjonToOptionValues(this.props.codelistFunksjon)} />\n                        </div>\n                        <div className={formsStyle.flex50}>\n                            <InputField\n                                id={`ansvarsomraade-${index}-beskrivelseAvAnsvarsomraade`}\n                                onChange={(event) => { this.handleOnChange(event.target.value, 'beskrivelseAvAnsvarsomraade', index) }}\n                                label=\"Beskrivelse av ansvarsområdet\"\n                                value={ansvarsomraade.beskrivelseAvAnsvarsomraade || ''} />\n                        </div>\n                        <div className={formsStyle.flexAuto}>\n                            <Select\n                                id={`ansvarsomraade-${index}-tiltaksklasse`}\n                                onChange={(event) => { this.handleTiltaksklasseOnChange(event.target.value, 'tiltaksklasse', index) }}\n                                label=\"Tiltaksklasse\"\n                                value={ansvarsomraade.tiltaksklasse?.kodeverdi}\n                                options={this.convertCodelistTiltaksklasseToOptionValues(this.props.codelistTiltaksklasse)} />\n                        </div>\n                    </div>\n                    <fieldset className={formsStyle.fieldset}>\n                        <legend>Våre samsvarserklæringer/kontrollerklæringer vil foreligge ved (gjelder ikke for SØK)</legend>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedRammetillatelse`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedRammetillatelse', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedRammetillatelse ? true : false}>\n                            Rammetillatelse\n                        </CheckBoxListItem>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedIgangsettingstillatelse`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedIgangsettingstillatelse', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedIgangsettingstillatelse ? true : false}>\n                            Igangsettingstillatelse\n                        </CheckBoxListItem>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedMidlertidigBrukstillatelse`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedMidlertidigBrukstillatelse', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedMidlertidigBrukstillatelse ? true : false}>\n                            Midlertidig brukstillatelse\n                        </CheckBoxListItem>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedFerdigattest`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedFerdigattest', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedFerdigattest ? true : false}>\n                            Ferdigattest\n                        </CheckBoxListItem>\n                    </fieldset>\n                    <fieldset className={formsStyle.fieldset}>\n                        <legend>Har foretaket sentral godkjenning som dekker ansvarsområdet?</legend>\n                        <RadioButtonListItem\n                            id={`ansvarsomraade-${index}-dekkesOmraadeAvSentralGodkjenningSpecified-true`}\n                            name=\"dekkesOmraadeAvSentralGodkjenningSpecified\"\n                            onChange={(event) => { this.handleOnChange(true, 'dekkesOmraadeAvSentralGodkjenningSpecified', index) }}\n                            inputValue=\"true\"\n                            checked={ansvarsomraade.dekkesOmraadeAvSentralGodkjenningSpecified ? true : false}>\n                            Ja\n                        </RadioButtonListItem>\n                        <RadioButtonListItem\n                            id={`ansvarsomraade-${index}-dekkesOmraadeAvSentralGodkjenningSpecified-false`}\n                            name=\"dekkesOmraadeAvSentralGodkjenningSpecified\"\n                            onChange={(event) => { this.handleOnChange(false, 'dekkesOmraadeAvSentralGodkjenningSpecified', index) }}\n                            inputValue=\"false\"\n                            checked={!ansvarsomraade.dekkesOmraadeAvSentralGodkjenningSpecified ? true : false}>\n                            Nei\n                        </RadioButtonListItem>\n                    </fieldset>\n                </div>\n                )\n            })\n            : (\n                <p>Ingen data for Eiendom/Byggested</p>\n            )\n    }\n}\n\nAnsvarIByggeProsjekt.propTypes = {\n    ansvarsomraader: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    codelistFunksjon: state.codelistFunksjon,\n    codelistTiltaksklasse: state.codelistTiltaksklasse\n});\n\nconst mapDispatchToProps = {\n    fetchCodelistFunksjon,\n    fetchCodelistTiltaksklasse\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnsvarIByggeProsjekt);\n","import { FETCH_CODELIST_FUNSKJON, FETCH_CODELIST_TILTAKSKLASSE } from 'constants/types';\n\nexport const fetchCodelistFunksjon = (guid) => dispatch => {\n    const apiUrl = 'https://register.dev.geonorge.no/api/kodelister/byggesoknad/funksjon.json?'\n    return fetch(apiUrl).then(res => res.json()).then(codelist => {\n        return dispatch({ type: FETCH_CODELIST_FUNSKJON, payload: codelist })\n    });\n}\n\nexport const fetchCodelistTiltaksklasse = (guid) => dispatch => {\n    const apiUrl = 'https://register.dev.geonorge.no/api/kodelister/byggesoknad/tiltaksklasse.json?'\n    return fetch(apiUrl).then(res => res.json()).then(codelist => {\n        return dispatch({ type: FETCH_CODELIST_TILTAKSKLASSE, payload: codelist })\n    });\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass AnsvarligSoeker extends Component {\n    render() {\n        const ansvarligSoeker = this.props.ansvarligSoeker;\n        return ansvarligSoeker && Object.keys(ansvarligSoeker).length\n            ? (\n                <dl className={formsStyle.fieldList}>\n                    <div className={formsStyle.flex50}>\n                        <dt>Organisasjonsnummer</dt><dd>{ansvarligSoeker.organisasjonsnummer}</dd>\n                    </div>\n                    <div className={formsStyle.flex50}>\n                        <dt>Navn på foretak</dt><dd>{ansvarligSoeker.navn}</dd>\n                    </div>\n                    <div className={formsStyle.flex100}>\n                        <dt>Kontaktperson</dt><dd>{ansvarligSoeker.kontaktperson?.navn}</dd>\n                    </div>\n                    <div className={formsStyle.flex50}>\n                        <dt>Telefon</dt><dd>{ansvarligSoeker.kontaktperson?.telefonnummer}</dd>\n                    </div>\n                    <div className={formsStyle.flex50}>\n                        <dt>Mobiltelefon</dt><dd>{ansvarligSoeker.kontaktperson?.mobilnummer}</dd>\n                    </div>\n                    <div className={formsStyle.flex100}>\n                        <dt>E-post</dt><dd>{ansvarligSoeker.kontaktperson?.epost}</dd>\n                    </div>\n                </dl>\n            )\n            : (\n                <p>Ingen data om ansvarlig søker</p>\n            )\n    }\n}\n\nAnsvarligSoeker.propTypes = {\n    ansvarligSoeker: PropTypes.object.isRequired\n};\n\nexport default connect(null, null)(AnsvarligSoeker);\n","export const formatAddress = (address) => {\n    let formattedAddress = '';\n    if (address.adresselinje1) {\n        formattedAddress += address.adresselinje1;\n        if (address.postnr || address.poststed) {\n            formattedAddress += ', ';\n        }\n    }\n    if (address.postnr) {\n        formattedAddress += address.postnr;\n        if (address.poststed) {\n            formattedAddress += ' '\n        }\n    }\n    if (address.poststed) {\n        formattedAddress += address.poststed\n    }\n\n    return formattedAddress;\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Helpers\nimport { formatAddress } from 'helpers/formatHelpers';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass EiendomByggested extends Component {\n    render() {\n        return this.props.eiendomByggested?.length\n            ? this.props.eiendomByggested.map((eiendomByggestedListItem, index) => {\n                return (\n                    <div key={index}>\n                        <dl className={formsStyle.fieldList}>\n                            <div className={formsStyle.flex25}>\n                                <dt>Gårdsnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.gaardsnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex25}>\n                                <dt>Bruksnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.bruksnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex25}>\n                                <dt>Festenr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.festenummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex25}>\n                                <dt>Seksjonsnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.seksjonsnummer}</dd>\n                            </div>\n\n                            <div className={formsStyle.flex50}>\n                                <dt>Bygningsnr.</dt><dd>{eiendomByggestedListItem.bygningsnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex50}>\n                                <dt>Bolignr.</dt><dd>{eiendomByggestedListItem.bolignummer}</dd>\n                            </div>\n\n                            <div className={formsStyle.flex100}>\n                                <dt>Kommunenummer.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.kommunenummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Adresse</dt><dd>{formatAddress(eiendomByggestedListItem.adresse)}</dd>\n                            </div>\n                        </dl>\n                    </div>\n                )\n            })\n            : (\n                <p>Ingen data for Eiendom/Byggested</p>\n            )\n    }\n}\n\nEiendomByggested.propTypes = {\n    eiendomByggested: PropTypes.array.isRequired\n};\n\nexport default connect(null, null)(EiendomByggested);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n// DIBK Design\nimport { CheckBoxListItem } from 'dibk-design';\n\n\nclass Erklaering extends Component {\n\n    handleOnChange(value, property) {\n        this.props.onChange({\n            ...this.props.ansvarsrett,\n            [property]: value\n        });\n    }\n\n    render() {\n        const ansvarsrett = this.props.ansvarsrett;\n        return ansvarsrett && Object.keys(ansvarsrett).length\n            ? (\n                <React.Fragment>\n                    <p>Vi kjenner reglene om straff og sanksjoner i plan- og bygningsloven kapittel 32, og at uriktige opplysninger kan føre til reaksjoner.</p>\n                    <p>Vi forplikter oss å stille med riktig kompetanse i byggeprosjekt, jf. SAK10 kapittel 10 og 11.</p>\n                    <CheckBoxListItem\n                        id=\"erklaeringAnsvarligProsjekterende\"\n                        onChange={(event) => { this.handleOnChange(event.target.checked, 'erklaeringAnsvarligProsjekterende') }}\n                        checked={ansvarsrett.erklaeringAnsvarligProsjekterende ? true : false}>\n                        Ansvarlig prosjekterende erklærer at prosjekteringen skal være planlagt, gjennomført og kvalitetssikret i henhold til pbl jf. SAK10 §12-3\n                    </CheckBoxListItem>\n                    <CheckBoxListItem\n                        id=\"erklaeringAnsvarligUtfoerende\"\n                        onChange={(event) => { this.handleOnChange(event.target.checked, 'erklaeringAnsvarligUtfoerende') }}\n                        checked={ansvarsrett.erklaeringAnsvarligUtfoerende ? true : false}>\n                        Ansvarlig utførende erklærer at arbeidet ikke skal starte før produksjonsunderlaget er klart, jf. SAK 10, §12-4\n                    </CheckBoxListItem>\n                    <CheckBoxListItem\n                        id=\"erklaeringAnsvarligKontrollerende\"\n                        onChange={(event) => { this.handleOnChange(event.target.checked, 'erklaeringAnsvarligKontrollerende') }}\n                        checked={ansvarsrett.erklaeringAnsvarligKontrollerende ? true : false}>\n                        Ansvarlig kontollerende erklærer uavhengighet fra foretaket det skal kontrollere §14-1\n                    </CheckBoxListItem>\n                </React.Fragment>\n            )\n            : (\n                <p>Ingen data om ansvarlig søker</p>\n            )\n    }\n}\n\nErklaering.propTypes = {\n    ansvarsrett: PropTypes.object.isRequired,\n    onChange: PropTypes.func\n};\n\nexport default connect(null, null)(Erklaering);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass Foretak extends Component {\n    render() {\n        const foretak = this.props.foretak;\n        return foretak && Object.keys(foretak).length\n            ? (\n                <React.Fragment>\n                    <dl className={formsStyle.fieldList}>\n                        <div className={formsStyle.flex33}>\n                            <dt>Organisasjonsnummer</dt><dd>{foretak.organisasjonsnummer}</dd>\n                        </div>\n                        <div className={formsStyle.flex66}>\n                            <dt>Navn</dt><dd>{foretak.navn}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Adresse</dt><dd>{foretak.adresse?.adresselinje1}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Postnr.</dt><dd>{foretak.adresse?.postnr}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Poststed</dt><dd>{foretak.adresse?.poststed}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Kontaktperson</dt><dd>{foretak.kontaktperson?.navn}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Mobiltelefon</dt><dd>{foretak.kontaktperson?.mobilnummer}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Epost</dt><dd>{foretak.kontaktperson?.epost}</dd>\n                        </div>\n                    </dl>\n                    <p>\n                        <b>\n                            {\n                                foretak.harSentralGodkjenning\n                                    ? 'Foretaket har sentral godkjenning'\n                                    : 'Foretaket har ikke sentral godkjenning'\n                            }\n                        </b>\n                    </p>\n                </React.Fragment>\n            )\n            : (\n                <p>Ingen data for foretak</p>\n            )\n    }\n}\n\nForetak.propTypes = {\n    foretak: PropTypes.object.isRequired\n};\n\nexport default connect(null, null)(Foretak);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { Header, Paper } from 'dibk-design';\n\n// Components\nimport AnsvarIByggeProsjekt from 'components/partials/Forms/FormParts/AnsvarIByggeProsjekt';\nimport AnsvarligSoeker from 'components/partials/Forms/FormParts/AnsvarligSoeker';\nimport EiendomByggested from 'components/partials/Forms/FormParts/EiendomByggested';\nimport Erklaering from 'components/partials/Forms/FormParts/Erklaering';\nimport Foretak from 'components/partials/Forms/FormParts/Foretak';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass DistribuertAnsvarsrett extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length) {\n            const formApiUrl = this.props.selectedSubmission?._links?.ansvarsrettdistribuert?.href;\n            fetch(`https://dibk-ftpb-broop-api.azurewebsites.net${formApiUrl}`).then(res => res.json()).then(form => {\n                this.props.updateSelectedForm(form);\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        const hasSelectedSubmission = this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length;\n        const hasSelectedForm = this.props.selectedForm && Object.keys(this.props.selectedForm).length;\n        if (hasSelectedSubmission && !hasSelectedForm) {\n            const formApiUrl = this.props.selectedSubmission?._links?.ansvarsrettdistribuert?.href;\n            fetch(`https://dibk-ftpb-broop-api.azurewebsites.net${formApiUrl}`).then(res => res.json()).then(form => {\n                this.props.updateSelectedForm(form);\n            });\n        }\n    }\n\n    updateAnsvarsomraader(ansvarsomraader) {\n        this.updateFormDataField({\n            ...this.props.selectedForm.formData.ansvarsrett,\n            ansvarsomraader\n        }, 'ansvarsrett')\n    }\n\n    updateFormDataField(value, property) {\n        this.props.updateSelectedForm({\n            ...this.props.selectedForm,\n            formData: {\n                ...this.props.selectedForm.formData,\n                [property]: value\n            }\n        });\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return formData\n            ? (\n                <React.Fragment>\n                    <dl className={`${formsStyle.fieldList} ${formsStyle.inlineFieldList}`}>\n                        <div className={formsStyle.flex50}>\n                            <dt>Kommunens saksnummer (år/sekvensnummer):</dt>\n                            <dd>{formData.kommunensSaksnummer?.saksaar}/{formData.kommunensSaksnummer?.sakssekvensnummer}</dd>\n                        </div>\n                    </dl>\n                    <Paper>\n                        <Header content=\"Eiendom/Byggested\" size={2}></Header>\n                        <EiendomByggested eiendomByggested={formData.eiendomByggested} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Foretak\" size={2}></Header>\n                        <Foretak foretak={formData.ansvarsrett?.foretak} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvar i byggeprosjekt\" size={2}></Header>\n                        <AnsvarIByggeProsjekt ansvarsomraader={formData.ansvarsrett.ansvarsomraader} onChange={ansvarsomraader => this.updateAnsvarsomraader(ansvarsomraader)} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvarlig søker\" size={2}></Header>\n                        <AnsvarligSoeker ansvarligSoeker={formData.ansvarligSoeker} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Erklæring\" size={2}></Header>\n                        <Erklaering ansvarsrett={formData.ansvarsrett} onChange={ansvarsrett => this.updateFormDataField(ansvarsrett, 'ansvarsrett')} />\n                    </Paper>\n                </React.Fragment>)\n            : (\n                <p>Henter skjema</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DistribuertAnsvarsrett);\n\n\n","import { UPDATE_SELECTED_FORM } from 'constants/types';\n\nexport const updateSelectedForm = (form) => dispatch => {\n    return dispatch({ type: UPDATE_SELECTED_FORM, payload: form })\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { Header } from 'dibk-design';\n\n// Template\nimport Container from 'components/template/Container';\n\n// Partials\nimport DistribuertAnsvarsrett from 'components/partials/Forms/DistribuertAnsvarsrett';\n\n// Actions\nimport { fetchSubmission } from 'actions/SubmissionActions';\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: null\n        }\n    }\n\n    componentDidMount() {\n        const submissionId = this.props.match.params.submissionId;\n        if (!this.props.submission || Object.keys(!this.props.submission).length) {\n            this.props.fetchSubmission(submissionId).then((response) => {\n                const submission = response?.payload || null;\n                this.setState({ submission });\n            });\n        }\n    }\n\n    renderForm(formType, selectedSubmission) {\n        switch (formType) {\n            case 'DistribuertAnsvarsrett':\n                return <DistribuertAnsvarsrett selectedSubmission={selectedSubmission} />\n            default:\n                return ''\n        }\n    }\n\n\n    render() {\n        const formType = this.props.match.params.formType;\n        const selectedSubmission = this.props.selectedSubmission\n        return selectedSubmission\n            ? (\n                <Container>\n                    <Header content={formType} />\n                    {this.renderForm(formType, selectedSubmission)}\n                </Container>)\n            : (\n                <Container>\n                    <p>Henter skjema</p>\n                </Container>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    form: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    fetchSubmission\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\n\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Template\nimport Container from 'components/template/Container';\n\nclass NotFound extends Component {\n\n  render() {\n    return (<Container>\n      <h1>404</h1>\n      <p>Siden finnes ikke</p>\n    </Container>)\n  }\n}\n\nexport default connect(null, null)(NotFound);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { NavigationBar } from 'dibk-design';\n\n\nclass MainNavigationBar extends Component {\n\n  render() {\n    return (<NavigationBar logoLink=\"/\" />)\n  }\n}\n\nexport default connect(null, null)(MainNavigationBar);\n","// Dependecies\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport WebFont from 'webfontloader';\n\n// Utils\nimport configureStore, { history } from 'utils/configureStore';\n\n// Routes\nimport Home from 'components/routes/Home';\nimport Form from 'components/routes/Forms/FormType/Form';\nimport NotFound from 'components/routes/NotFound';\n\n// Partials\nimport MainNavigationBar from 'components/partials/MainNavigationBar';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:400,700&display=swap']\n  }\n});\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <ConnectedRouter history={history}>\n        <BrowserRouter basename=\"/dibk.ftpb.broop.front\">\n          <MainNavigationBar />\n          <Switch>\n            <Route exact={true} path=\"/skjema/:formType/:submissionId\" render={(props) => (<Form {...props} />)} />\n            <Route exact={true} path=\"/:submissionId\" render={(props) => (<Home {...props} />)} />\n            <Route exact={true} path=\"/\" render={(props) => (<Home {...props} />)} />\n            <Route render={() => (<NotFound />)} />\n          </Switch>\n        </BrowserRouter>\n      </ConnectedRouter>\n    </Provider>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const config = {};\nexport default config;\n\nfunction load() {\n    return fetch(`${process.env.PUBLIC_URL || ''}/config.json`)\n    .then(result => result.json())\n    .then((newconfig) => {\n        for(let prop in config) {\n            delete config[prop]\n        }\n        for(let prop in newconfig) {\n            config[prop] = newconfig[prop]\n        }\n        return config;\n    });\n}\nexport {load}","import { Component } from 'react';\nimport {load} from \"components/config\";\n\nexport default class ConfigLoader extends Component {\n    constructor(props){\n        super(props);\n        this.state = {isLoaded: false};\n    }\n\n\n  componentDidMount() {\n     // Once the configuration is loaded set `isLoaded` to true so we know to render our component\n     load().then(config =>  this.setState({isLoaded: true, config}));\n  }\n\n  render() {      \n    // If we haven't yet loaded the config, show either a \"splash\" component provided via a `loading` props or return nothing.\n    if(!this.state.isLoaded) {\n        return this.props.loading ? this.props.loading() : null;\n    }\n\n    // The config is loaded so show the component set on the `ready()` props\n    return this.props.ready(this.state.config);\n  }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\nimport ConfigLoader from 'components/ConfigLoader';\n\nclass Main extends Component {\n    render() {\n        return <ConfigLoader ready={() => <App />} />;\n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldList\":\"Forms_fieldList__kV3nu\",\"inlineFieldList\":\"Forms_inlineFieldList__2qwV8\",\"inputGroup\":\"Forms_inputGroup__3Di_h\",\"fieldset\":\"Forms_fieldset__1SjiH\",\"flexAuto\":\"Forms_flexAuto__3sXRM\",\"flex25\":\"Forms_flex25__2ECxU\",\"flex33\":\"Forms_flex33__1fLcw\",\"flex50\":\"Forms_flex50__3MMK6\",\"flex66\":\"Forms_flex66__180-r\",\"flex75\":\"Forms_flex75__q5a5g\",\"flex100\":\"Forms_flex100__18MUC\"};"],"sourceRoot":""}