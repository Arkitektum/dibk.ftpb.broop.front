{"version":3,"sources":["components/template/Container.module.scss","constants/types.js","reducers/CodelistFunksjonReducer.js","reducers/CodelistTiltaksklasseReducer.js","reducers/SelectedFormReducer.js","reducers/SelectedSubmissionReducer.js","reducers/index.js","utils/configureStore.js","components/template/Container.js","components/config.js","helpers/environmentVariableHelpers.js","actions/SubmissionActions.js","components/routes/Home.js","components/partials/Forms/FormParts/AnsvarIByggeProsjekt.js","actions/CodelistActions.js","components/partials/Forms/FormParts/AnsvarligSoeker.js","helpers/formatHelpers.js","components/partials/Forms/FormParts/EiendomByggested.js","components/partials/Forms/FormParts/Erklaering.js","components/partials/Forms/FormParts/Foretak.js","actions/FormActions.js","components/partials/Forms/DistribuertAnsvarsrett.js","components/partials/Forms/KontrollErklaering/Start.js","components/partials/Forms/KontrollErklaering/ErklaeringenGjelder.js","components/partials/Forms/KontrollErklaering/Sluttrapport.js","components/partials/Forms/KontrollErklaering/Erklaering.js","components/partials/Forms/KontrollErklaering.js","components/partials/Forms/SamsvarsErklaering/Start.js","components/partials/Forms/SamsvarsErklaering/ErklaeringenGjelder.js","components/partials/Forms/SamsvarsErklaering/GjenstaaendeArbeider.js","components/partials/Forms/SamsvarsErklaering/Erklaering.js","components/partials/Forms/SamsvarsErklaering.js","components/routes/Forms/FormType/Form.js","components/routes/NotFound.js","components/partials/MainNavigationBar.js","App.js","serviceWorker.js","components/ConfigLoader.js","index.js","components/partials/Forms/Forms.module.scss"],"names":["module","exports","FETCH_CODELIST_FUNSKJON","FETCH_CODELIST_TILTAKSKLASSE","FETCH_SUBMISSION","FETCH_SELECTED_FORM","UPDATE_SELECTED_FORM","initialState","reducer","state","action","type","payload","reducers","history","combineReducers","router","connectRouter","codelistFunksjon","CodelistFunksjonReducer","codelistTiltaksklasse","CodelistTiltaksklasseReducer","selectedForm","SelectedFormReducer","selectedSubmission","SelectedSubmissionReducer","createBrowserHistory","composeEnhancers","composeWithDevTools","ContentContainer","className","style","container","this","props","children","Component","connect","config","insertEnvironmentVariableParameters","environmentVariable","environmentVariableParameters","m","environmentVariableRegex","environmentVariableCopy","exec","index","lastIndex","match","substring","lastIndexOf","replace","getEnvironmentVariable","environmentVariableKey","environmentVariables","console","warn","fetchSubmission","guid","dispatch","internalApiUrl","apiUrl","fetch","then","res","json","form","Home","submission","response","setState","Container","content","onClick","Object","keys","length","referanseId","to","innsendingsType","toLowerCase","color","mapDispatchToProps","AnsvarIByggeProsjekt","hasCodelistFunksjon","hasCodelistTiltaksklasse","fetchCodelistFunksjon","fetchCodelistTiltaksklasse","value","property","updatedAnsvarsomraader","ansvarsomraader","onChange","selectedOptionValue","selectedCodelistItem","containeditems","find","item","codevalue","kodeverdi","kodebeskrivelse","label","handleOnChange","map","key","ansvarsomraade","formsStyle","inputGroup","flex50","id","event","handleFunksjonOnChange","target","funksjon","contentOnly","keyAsContent","options","convertCodelistFunksjonToOptionValues","beskrivelseAvAnsvarsomraade","flexAuto","handleTiltaksklasseOnChange","tiltaksklasse","convertCodelistTiltaksklasseToOptionValues","fieldset","checked","samsvarKontrollVedRammetillatelse","samsvarKontrollVedIgangsettingstillatelse","samsvarKontrollVedMidlertidigBrukstillatelse","samsvarKontrollVedFerdigattest","name","inputValue","dekkesOmraadeAvSentralGodkjenningSpecified","codelist","AnsvarligSoeker","ansvarligSoeker","fieldList","organisasjonsnummer","navn","flex100","kontaktperson","telefonnummer","mobilnummer","epost","formatAddress","address","formattedAddress","adresselinje1","postnr","poststed","EiendomByggested","eiendomByggested","eiendomByggestedListItem","flex25","eiendomsidentifikasjon","gaardsnummer","bruksnummer","festenummer","seksjonsnummer","bygningsnummer","bolignummer","kommunenummer","adresse","Erklaering","ansvarsrett","funksjonKode","some","Fragment","hasAnsvarsomraadeFunksjon","erklaeringAnsvarligProsjekterende","erklaeringAnsvarligUtfoerende","erklaeringAnsvarligKontrollerende","Foretak","updatedForetak","foretak","flex33","flex66","handleKontaktpersonOnChange","harSentralGodkjenning","fetchSelectedForm","formType","formPath","_links","href","updateSelectedForm","DistribuertAnsvarsrett","hasSelectedSubmission","hasSelectedForm","updateFormDataField","formData","headerSection","subtitle","inlineFieldList","kommunensSaksnummer","saksaar","sakssekvensnummer","size","updateAnsvarsomraader","KontrollErklaeringer","prosjektnavn","buttonRow","reverse","pathname","search","window","location","arrow","ErklaeringenGjelder","ansvarsrettErklaert","beskrivelseAvAnsvarsomraadet","Sluttrapport","kontrollerende","handleOnAnsvarsrettKontrollerendeChange","ingenAvvik","observerteAvvik","aapneAvvik","Erklaeringer","gjennomfoertKontroll","erklaeringKontroll","activeStepId","Start","stepId","steps","start","finished","hasErrors","link","erklaeringenGjelder","sluttrapport","erklaering","renderStep","GjenstaaendeArbeider","prosjekterende","okForFerdigattest","okForRammetillatelse","okForIgangsetting","okForMidlertidigBrukstillatelse","handleOnAnsvarsrettProsjekterendeSelect","samsvarMedTek","erTEK10","gjenstaaendeArbeider","Form","submissionId","params","KontrollErklaering","SamsvarsErklaering","renderForm","NotFound","MainNavigationBar","logoLink","WebFont","load","google","families","store","preloadedState","middleware","thunk","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","App","basename","exact","path","render","Boolean","hostname","ConfigLoader","isLoaded","process","result","newconfig","prop","ready","loading","Main","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.25d0ec8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__dTOM0\"};","export const FETCH_CODELIST_FUNSKJON = 'FETCH_CODELIST_FUNSKJON'\nexport const FETCH_CODELIST_TILTAKSKLASSE = 'FETCH_CODELIST_TILTAKSKLASSE'\nexport const FETCH_SUBMISSION = 'FETCH_SUBMISSION';\nexport const FETCH_SELECTED_FORM = 'FETCH_SELECTED_FORM';\nexport const UPDATE_SELECTED_FORM = 'UPDATE_SELECTED_FORM';\n","import { FETCH_CODELIST_FUNSKJON } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_CODELIST_FUNSKJON:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import { FETCH_CODELIST_TILTAKSKLASSE } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_CODELIST_TILTAKSKLASSE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n","import { FETCH_SELECTED_FORM, UPDATE_SELECTED_FORM } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SELECTED_FORM:\n\t\t\treturn action.payload;\n\t\tcase UPDATE_SELECTED_FORM:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { FETCH_SUBMISSION } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SUBMISSION:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","// Dependencies\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\n// Reducers\nimport CodelistFunksjonReducer from 'reducers/CodelistFunksjonReducer';\nimport CodelistTiltaksklasseReducer from 'reducers/CodelistTiltaksklasseReducer';\nimport SelectedFormReducer from 'reducers/SelectedFormReducer';\nimport SelectedSubmissionReducer from 'reducers/SelectedSubmissionReducer';\n\nconst reducers = history => combineReducers({\n  router: connectRouter(history),\n  codelistFunksjon: CodelistFunksjonReducer,\n  codelistTiltaksklasse: CodelistTiltaksklasseReducer,\n  selectedForm: SelectedFormReducer,\n  selectedSubmission: SelectedSubmissionReducer\n});\n\nexport default reducers;\n","// Dependencies\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\n// Reducers\nimport createRootReducer from 'reducers';\n\n\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunk];\n  const history = createBrowserHistory();\n  const store = createStore(\n\t\tcreateRootReducer(history),\n\t\tpreloadedState,\n\t\tcomposeEnhancers(\n\t\t\tapplyMiddleware(\n\t\t\t\t...middleware,\n\t\t\t\trouterMiddleware(history)\n\t\t\t)\n\t\t)\n\t);\n  return store;\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Stylesheets\nimport style from 'components/template/Container.module.scss';\n\nclass ContentContainer extends Component {\n\n  render() {\n    return (<div className={style.container}>\n      {this.props.children}\n    </div>)\n  }\n}\n\nexport default connect(null, null)(ContentContainer);\n","const config = {};\nexport default config;\n\nfunction load() {\n    return fetch(`${process.env.PUBLIC_URL || ''}/config.json`)\n    .then(result => result.json())\n    .then((newconfig) => {\n        for(let prop in config) {\n            delete config[prop]\n        }\n        for(let prop in newconfig) {\n            config[prop] = newconfig[prop]\n        }\n        return config;\n    });\n}\nexport {load}","// Config\nimport config from 'components/config';\n\nconst insertEnvironmentVariableParameters = (environmentVariable, environmentVariableParameters) => {\n  const environmentVariableRegex = /{[0-9a-z]*}/ig;\n  let m;\n  const environmentVariableCopy = environmentVariable;\n  while ((m = environmentVariableRegex.exec(environmentVariableCopy)) !== null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === environmentVariableRegex.lastIndex) {\n      environmentVariableRegex.lastIndex++;\n    }\n    const match = m[0];\n    const index = match.substring(match.lastIndexOf(\"{\") + 1, match.lastIndexOf(\"}\"));\n    environmentVariable = environmentVariable.replace(match, environmentVariableParameters[index])\n  };\n  return environmentVariable;\n}\n\nexport const getEnvironmentVariable = (environmentVariableKey, environmentVariableParameters = {}) => {\n  const environmentVariables = config;\n  if (environmentVariables && environmentVariables[environmentVariableKey]) {\n    const environmentVariable = environmentVariables[environmentVariableKey];\n    return insertEnvironmentVariableParameters(environmentVariable, environmentVariableParameters);\n  } else {\n    console.warn(`Environment variable for ${environmentVariableKey} is missing`);\n    return null;\n  }\n}","// Types\nimport { FETCH_SUBMISSION } from 'constants/types';\n\n// Helpers\nimport { getEnvironmentVariable } from 'helpers/environmentVariableHelpers.js';\n\nexport const fetchSubmission = (guid) => dispatch => {\n    const internalApiUrl = getEnvironmentVariable('internalApiUrl');\n    const apiUrl = `${internalApiUrl}/api/v1/Innsending/${guid}`\n    return fetch(apiUrl).then(res => res.json()).then(form => {\n        return dispatch({ type: FETCH_SUBMISSION, payload: form })\n    });\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n// DIBK Design\nimport { Button } from 'dibk-design';\n\n// Template\nimport Container from 'components/template/Container';\n\n// Actions\nimport { fetchSubmission } from 'actions/SubmissionActions';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submission: null\n    }\n  }\n\n\n  fetchSubmission(guid) {\n    this.props.fetchSubmission(guid).then(response => {\n      const submission = response?.payload || null;\n      this.setState({ submission });\n    })\n  }\n\n\n  render() {\n    const submission = this.state.submission;\n    return (\n      <Container>\n        <h1>Testskjemaer:</h1>\n        <Button content=\"Hent ansvarsrett\" onClick={() => this.fetchSubmission(\"D84A298B-5D3F-4D8C-BDC1-45EF3E2808B2\")} />\n        <Button content=\"Hent kontrollerklæring\" onClick={() => this.fetchSubmission(\"07B1ACDB-BEBB-4B0A-BB1C-CB7ABA85A3AC\")} />\n        <Button content=\"Hent samsvarserklæring\" onClick={() => this.fetchSubmission(\"C79BA4D1-8404-4D6F-8967-BADF75951DE5\")} />\n\n        {\n          submission && Object.keys(submission).length\n            ? (\n              <div>\n                <p>Skjema med referanse {submission.referanseId} er hentet</p>\n                <Link to={`/Skjema/${submission.innsendingsType}/${submission.referanseId}/`}>\n                  <Button content={`Gå til ${submission.innsendingsType.toLowerCase()}`} color='primary'></Button>\n                </Link>\n              </div>\n            )\n            : ''\n        }\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  fetchSubmission\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// DIBK Design\nimport { CheckBoxListItem, InputField, RadioButtonListItem, Select } from 'dibk-design';\n\n// Actions\nimport { fetchCodelistFunksjon, fetchCodelistTiltaksklasse } from 'actions/CodelistActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass AnsvarIByggeProsjekt extends Component {\n\n    componentDidMount() {\n        const hasCodelistFunksjon = this.props.codelistFunksjon && Object.keys(this.props.codelistFunksjon).length;\n        const hasCodelistTiltaksklasse = this.props.codelistTiltaksklasse && Object.keys(this.props.codelistTiltaksklasse).length;\n        if (!hasCodelistFunksjon) {\n            this.props.fetchCodelistFunksjon();\n        }\n        if (!hasCodelistTiltaksklasse) {\n            this.props.fetchCodelistTiltaksklasse();\n        }\n    }\n\n    handleOnChange(value, property, index) {\n        let updatedAnsvarsomraader = this.props.ansvarsomraader;\n        updatedAnsvarsomraader[index][property] = value;\n        this.props.onChange(updatedAnsvarsomraader);\n    }\n\n    handleFunksjonOnChange(selectedOptionValue, property, index) {\n        const selectedCodelistItem = this.props.codelistFunksjon?.containeditems.find(item => {\n            return item.codevalue === selectedOptionValue;\n        });\n        if (selectedCodelistItem) {\n            const value = {\n                kodeverdi: selectedCodelistItem.codevalue,\n                kodebeskrivelse: selectedCodelistItem.label\n            }\n            this.handleOnChange(value, property, index);\n        }\n    }\n\n    handleTiltaksklasseOnChange(selectedOptionValue, property, index) {\n        const selectedCodelistItem = this.props.codelistTiltaksklasse?.containeditems.find(item => {\n            return item.codevalue === selectedOptionValue;\n        });\n        if (selectedCodelistItem) {\n            const value = {\n                kodeverdi: selectedCodelistItem.codevalue,\n                kodebeskrivelse: selectedCodelistItem.label\n            }\n            this.handleOnChange(value, property, index);\n        }\n    }\n\n    convertCodelistFunksjonToOptionValues(codelistFunksjon) {\n        return codelistFunksjon?.containeditems?.length\n            ? codelistFunksjon?.containeditems.map(item => {\n                return {\n                    key: item.label,\n                    value: item.codevalue\n                }\n            }) : []\n    }\n\n    convertCodelistTiltaksklasseToOptionValues(codelistTiltaksklasse) {\n        return codelistTiltaksklasse?.containeditems?.length\n            ? codelistTiltaksklasse?.containeditems.map(item => {\n                return {\n                    key: item.label,\n                    value: item.codevalue\n                }\n            }) : []\n    }\n\n    render() {\n        const ansvarsomraader = this.props.ansvarsomraader;\n        return ansvarsomraader?.length\n            ? ansvarsomraader.map((ansvarsomraade, index) => {\n                return (<div key={index}>\n                    <div className={formsStyle.inputGroup}>\n                        <div className={formsStyle.flex50}>\n                            {/* TODO: Check if select field and API-request for code list is necessary */}\n                            <Select\n                                id={`ansvarsomraade-${index}-funksjon`}\n                                onChange={(event) => { this.handleFunksjonOnChange(event.target.value, 'funksjon', index) }}\n                                label=\"Funksjon\"\n                                value={ansvarsomraade.funksjon?.kodeverdi}\n                                contentOnly\n                                keyAsContent\n                                options={this.convertCodelistFunksjonToOptionValues(this.props.codelistFunksjon)} />\n                        </div>\n                        <div className={formsStyle.flex50}>\n                            <InputField\n                                id={`ansvarsomraade-${index}-beskrivelseAvAnsvarsomraade`}\n                                onChange={(event) => { this.handleOnChange(event.target.value, 'beskrivelseAvAnsvarsomraade', index) }}\n                                label=\"Beskrivelse av ansvarsområdet\"\n                                value={ansvarsomraade.beskrivelseAvAnsvarsomraade || ''} />\n                        </div>\n                        <div className={formsStyle.flexAuto}>\n                            <Select\n                                id={`ansvarsomraade-${index}-tiltaksklasse`}\n                                onChange={(event) => { this.handleTiltaksklasseOnChange(event.target.value, 'tiltaksklasse', index) }}\n                                label=\"Tiltaksklasse\"\n                                value={ansvarsomraade.tiltaksklasse?.kodeverdi}\n                                options={this.convertCodelistTiltaksklasseToOptionValues(this.props.codelistTiltaksklasse)} />\n                        </div>\n                    </div>\n                    <fieldset className={formsStyle.fieldset}>\n                        <legend>Våre samsvarserklæringer/kontrollerklæringer vil foreligge ved (gjelder ikke for SØK)</legend>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedRammetillatelse`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedRammetillatelse', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedRammetillatelse ? true : false}\n                            contentOnly>\n                            Rammetillatelse\n                        </CheckBoxListItem>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedIgangsettingstillatelse`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedIgangsettingstillatelse', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedIgangsettingstillatelse ? true : false}\n                            contentOnly>\n                            Igangsettingstillatelse\n                        </CheckBoxListItem>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedMidlertidigBrukstillatelse`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedMidlertidigBrukstillatelse', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedMidlertidigBrukstillatelse ? true : false}\n                            contentOnly>\n                            Midlertidig brukstillatelse\n                        </CheckBoxListItem>\n                        <CheckBoxListItem\n                            id={`ansvarsomraade-${index}-samsvarKontrollVedFerdigattest`}\n                            onChange={(event) => { this.handleOnChange(event.target.checked, 'samsvarKontrollVedFerdigattest', index) }}\n                            checked={ansvarsomraade.samsvarKontrollVedFerdigattest ? true : false}\n                            contentOnly>\n                            Ferdigattest\n                        </CheckBoxListItem>\n                    </fieldset>\n                    <fieldset className={formsStyle.fieldset}>\n                        <legend>Har foretaket sentral godkjenning som dekker ansvarsområdet?</legend>\n                        <RadioButtonListItem\n                            id={`ansvarsomraade-${index}-dekkesOmraadeAvSentralGodkjenningSpecified-true`}\n                            name=\"dekkesOmraadeAvSentralGodkjenningSpecified\"\n                            onChange={(event) => { this.handleOnChange(true, 'dekkesOmraadeAvSentralGodkjenningSpecified', index) }}\n                            inputValue=\"true\"\n                            checked={ansvarsomraade.dekkesOmraadeAvSentralGodkjenningSpecified ? true : false}>\n                            Ja\n                        </RadioButtonListItem>\n                        <RadioButtonListItem\n                            id={`ansvarsomraade-${index}-dekkesOmraadeAvSentralGodkjenningSpecified-false`}\n                            name=\"dekkesOmraadeAvSentralGodkjenningSpecified\"\n                            onChange={(event) => { this.handleOnChange(false, 'dekkesOmraadeAvSentralGodkjenningSpecified', index) }}\n                            inputValue=\"false\"\n                            checked={!ansvarsomraade.dekkesOmraadeAvSentralGodkjenningSpecified ? true : false}>\n                            Nei\n                        </RadioButtonListItem>\n                    </fieldset>\n                </div>\n                )\n            })\n            : (\n                <p>Ingen data for Eiendom/Byggested</p>\n            )\n    }\n}\n\nAnsvarIByggeProsjekt.propTypes = {\n    ansvarsomraader: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    codelistFunksjon: state.codelistFunksjon,\n    codelistTiltaksklasse: state.codelistTiltaksklasse\n});\n\nconst mapDispatchToProps = {\n    fetchCodelistFunksjon,\n    fetchCodelistTiltaksklasse\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnsvarIByggeProsjekt);\n","import { FETCH_CODELIST_FUNSKJON, FETCH_CODELIST_TILTAKSKLASSE } from 'constants/types';\n\nexport const fetchCodelistFunksjon = (guid) => dispatch => {\n    const apiUrl = 'https://register.dev.geonorge.no/api/kodelister/byggesoknad/funksjon.json?'\n    return fetch(apiUrl).then(res => res.json()).then(codelist => {\n        return dispatch({ type: FETCH_CODELIST_FUNSKJON, payload: codelist })\n    });\n}\n\nexport const fetchCodelistTiltaksklasse = (guid) => dispatch => {\n    const apiUrl = 'https://register.dev.geonorge.no/api/kodelister/byggesoknad/tiltaksklasse.json?'\n    return fetch(apiUrl).then(res => res.json()).then(codelist => {\n        return dispatch({ type: FETCH_CODELIST_TILTAKSKLASSE, payload: codelist })\n    });\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass AnsvarligSoeker extends Component {\n    render() {\n        const ansvarligSoeker = this.props.ansvarligSoeker;\n        return ansvarligSoeker && Object.keys(ansvarligSoeker).length\n            ? (\n                <dl className={formsStyle.fieldList}>\n                    <div className={formsStyle.flex50}>\n                        <dt>Organisasjonsnummer</dt><dd>{ansvarligSoeker.organisasjonsnummer}</dd>\n                    </div>\n                    <div className={formsStyle.flex50}>\n                        <dt>Navn på foretak</dt><dd>{ansvarligSoeker.navn}</dd>\n                    </div>\n                    <div className={formsStyle.flex100}>\n                        <dt>Kontaktperson</dt><dd>{ansvarligSoeker.kontaktperson?.navn}</dd>\n                    </div>\n                    <div className={formsStyle.flex50}>\n                        <dt>Telefon</dt><dd>{ansvarligSoeker.kontaktperson?.telefonnummer}</dd>\n                    </div>\n                    <div className={formsStyle.flex50}>\n                        <dt>Mobiltelefon</dt><dd>{ansvarligSoeker.kontaktperson?.mobilnummer}</dd>\n                    </div>\n                    <div className={formsStyle.flex100}>\n                        <dt>E-post</dt><dd>{ansvarligSoeker.kontaktperson?.epost}</dd>\n                    </div>\n                </dl>\n            )\n            : (\n                <p>Ingen data om ansvarlig søker</p>\n            )\n    }\n}\n\nAnsvarligSoeker.propTypes = {\n    ansvarligSoeker: PropTypes.object.isRequired\n};\n\nexport default connect(null, null)(AnsvarligSoeker);\n","export const formatAddress = (address) => {\n    let formattedAddress = '';\n    if (address.adresselinje1) {\n        formattedAddress += address.adresselinje1;\n        if (address.postnr || address.poststed) {\n            formattedAddress += ', ';\n        }\n    }\n    if (address.postnr) {\n        formattedAddress += address.postnr;\n        if (address.poststed) {\n            formattedAddress += ' '\n        }\n    }\n    if (address.poststed) {\n        formattedAddress += address.poststed\n    }\n\n    return formattedAddress;\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Helpers\nimport { formatAddress } from 'helpers/formatHelpers';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass EiendomByggested extends Component {\n    render() {\n        return this.props.eiendomByggested?.length\n            ? this.props.eiendomByggested.map((eiendomByggestedListItem, index) => {\n                return (\n                    <div key={index}>\n                        <dl className={formsStyle.fieldList}>\n                            <div className={formsStyle.flex25}>\n                                <dt>Gårdsnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.gaardsnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex25}>\n                                <dt>Bruksnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.bruksnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex25}>\n                                <dt>Festenr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.festenummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex25}>\n                                <dt>Seksjonsnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.seksjonsnummer}</dd>\n                            </div>\n\n                            <div className={formsStyle.flex50}>\n                                <dt>Bygningsnr.</dt><dd>{eiendomByggestedListItem.bygningsnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex50}>\n                                <dt>Bolignr.</dt><dd>{eiendomByggestedListItem.bolignummer}</dd>\n                            </div>\n\n                            <div className={formsStyle.flex100}>\n                                <dt>Kommunenummer.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.kommunenummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Adresse</dt><dd>{formatAddress(eiendomByggestedListItem.adresse)}</dd>\n                            </div>\n                        </dl>\n                    </div>\n                )\n            })\n            : (\n                <p>Ingen data for Eiendom/Byggested</p>\n            )\n    }\n}\n\nEiendomByggested.propTypes = {\n    eiendomByggested: PropTypes.array.isRequired\n};\n\nexport default connect(null, null)(EiendomByggested);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n// DIBK Design\nimport { CheckBoxListItem } from 'dibk-design';\n\n\nclass Erklaering extends Component {\n\n    handleOnChange(value, property) {\n        this.props.onChange({\n            ...this.props.ansvarsrett,\n            [property]: value\n        });\n    }\n\n    hasAnsvarsomraadeFunksjon(funksjonKode) {\n        return this.props.ansvarsrett?.ansvarsomraader?.length\n            ? this.props.ansvarsrett.ansvarsomraader.some(ansvarsomraade => {\n                return ansvarsomraade.funksjon?.kodeverdi === funksjonKode\n            })\n            : false\n    }\n\n    render() {\n        const ansvarsrett = this.props.ansvarsrett;\n        return ansvarsrett && Object.keys(ansvarsrett).length\n            ? (\n                <React.Fragment>\n                    <p>Vi kjenner reglene om straff og sanksjoner i plan- og bygningsloven kapittel 32, og at uriktige opplysninger kan føre til reaksjoner.</p>\n                    <p>Vi forplikter oss å stille med riktig kompetanse i byggeprosjekt, jf. SAK10 kapittel 10 og 11.</p>\n                    {\n                        this.hasAnsvarsomraadeFunksjon(\"PRO\")\n                            ? (\n                                <CheckBoxListItem\n                                    id=\"erklaeringAnsvarligProsjekterende\"\n                                    onChange={(event) => { this.handleOnChange(event.target.checked, 'erklaeringAnsvarligProsjekterende') }}\n                                    checked={ansvarsrett.erklaeringAnsvarligProsjekterende ? true : false}>\n                                    Ansvarlig prosjekterende erklærer at prosjekteringen skal være planlagt, gjennomført og kvalitetssikret i henhold til pbl jf. SAK10 §12-3\n                                </CheckBoxListItem>\n                            )\n                            : ''\n                    }\n                    {\n                        this.hasAnsvarsomraadeFunksjon(\"UTF\")\n                            ? (\n                                <CheckBoxListItem\n                                    id=\"erklaeringAnsvarligUtfoerende\"\n                                    onChange={(event) => { this.handleOnChange(event.target.checked, 'erklaeringAnsvarligUtfoerende') }}\n                                    checked={ansvarsrett.erklaeringAnsvarligUtfoerende ? true : false}>\n                                    Ansvarlig utførende erklærer at arbeidet ikke skal starte før produksjonsunderlaget er klart, jf. SAK 10, §12-4\n                                </CheckBoxListItem>\n                            )\n                            : ''\n                    }\n                    {\n                        this.hasAnsvarsomraadeFunksjon(\"KONTROLL\")\n                            ? (\n                                <CheckBoxListItem\n                                    id=\"erklaeringAnsvarligKontrollerende\"\n                                    onChange={(event) => { this.handleOnChange(event.target.checked, 'erklaeringAnsvarligKontrollerende') }}\n                                    checked={ansvarsrett.erklaeringAnsvarligKontrollerende ? true : false}>\n                                    Ansvarlig kontollerende erklærer uavhengighet fra foretaket det skal kontrollere §14-1\n                                </CheckBoxListItem>\n                            )\n                            : ''\n                    }\n                </React.Fragment>\n            )\n            : (\n                <p>Ingen data om ansvarlig søker</p>\n            )\n    }\n}\n\nErklaering.propTypes = {\n    ansvarsrett: PropTypes.object.isRequired,\n    onChange: PropTypes.func\n};\n\nexport default connect(null, null)(Erklaering);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// DIBK Design\nimport { InputField } from 'dibk-design';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass Foretak extends Component {\n\n    handleKontaktpersonOnChange(value, property) {\n        let updatedForetak = this.props.foretak;\n        updatedForetak.kontaktperson[property] = value;\n        this.props.onChange(updatedForetak);\n    }\n\n    render() {\n        const foretak = this.props.foretak;\n        return foretak && Object.keys(foretak).length\n            ? (\n                <React.Fragment>\n                    <dl className={formsStyle.fieldList}>\n                        <div className={formsStyle.flex33}>\n                            <dt>Organisasjonsnummer</dt><dd>{foretak.organisasjonsnummer}</dd>\n                        </div>\n                        <div className={formsStyle.flex66}>\n                            <dt>Navn</dt><dd>{foretak.navn}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Adresse</dt><dd>{foretak.adresse?.adresselinje1}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Postnr.</dt><dd>{foretak.adresse?.postnr}</dd>\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <dt>Poststed</dt><dd>{foretak.adresse?.poststed}</dd>\n                        </div>\n                    </dl>\n                    <div className={formsStyle.inputGroup}>\n                        <div className={formsStyle.flex33}>\n                            <InputField\n                                id='foretak-kontaktperson-navn'\n                                onChange={(event) => { this.handleKontaktpersonOnChange(event.target.value, 'navn') }}\n                                label=\"Kontaktperson\"\n                                value={foretak.kontaktperson?.navn || ''} />\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <InputField\n                                id='foretak-kontaktperson-mobilnummer'\n                                onChange={(event) => { this.handleKontaktpersonOnChange(event.target.value, 'mobilnummer') }}\n                                label='Mobiltelefon'\n                                value={foretak.kontaktperson?.mobilnummer || ''}\n                                type='tel' />\n                        </div>\n                        <div className={formsStyle.flex33}>\n                            <InputField\n                                id='foretak-kontaktperson-epost'\n                                onChange={(event) => { this.handleKontaktpersonOnChange(event.target.value, 'epost') }}\n                                label=\"E-post\"\n                                value={foretak.kontaktperson?.epost || ''}\n                                type='email' />\n                        </div>\n                    </div>\n                    <p>\n                        <b>\n                            {\n                                foretak.harSentralGodkjenning\n                                    ? 'Foretaket har sentral godkjenning'\n                                    : 'Foretaket har ikke sentral godkjenning'\n                            }\n                        </b>\n                    </p>\n                </React.Fragment>\n            )\n            : (\n                <p>Ingen data for foretak</p>\n            )\n    }\n}\n\nForetak.propTypes = {\n    foretak: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default connect(null, null)(Foretak);\n","// Types\nimport { FETCH_SELECTED_FORM, UPDATE_SELECTED_FORM } from 'constants/types';\n\n// Helpers\nimport { getEnvironmentVariable } from 'helpers/environmentVariableHelpers.js';\n\nexport const fetchSelectedForm = (submission) => dispatch => {\n    const internalApiUrl = getEnvironmentVariable('internalApiUrl');\n    const formType = submission?.innsendingsType?.toLowerCase();\n    const formPath = submission._links?.[formType]?.href;\n    return fetch(`${internalApiUrl}${formPath}`).then(res => res.json()).then(form => {\n        return dispatch({ type: FETCH_SELECTED_FORM, payload: form })\n    });\n}\n\nexport const updateSelectedForm = (form) => dispatch => {\n    return dispatch({ type: UPDATE_SELECTED_FORM, payload: form })\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { Header, Paper } from 'dibk-design';\n\n// Components\nimport AnsvarIByggeProsjekt from 'components/partials/Forms/FormParts/AnsvarIByggeProsjekt';\nimport AnsvarligSoeker from 'components/partials/Forms/FormParts/AnsvarligSoeker';\nimport EiendomByggested from 'components/partials/Forms/FormParts/EiendomByggested';\nimport Erklaering from 'components/partials/Forms/FormParts/Erklaering';\nimport Foretak from 'components/partials/Forms/FormParts/Foretak';\n\n// Actions\nimport { fetchSelectedForm, updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass DistribuertAnsvarsrett extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length) {\n            this.props.fetchSelectedForm(this.props.selectedSubmission);\n        }\n    }\n\n    componentDidUpdate() {\n        const hasSelectedSubmission = this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length;\n        const hasSelectedForm = this.props.selectedForm && Object.keys(this.props.selectedForm).length;\n        if (hasSelectedSubmission && !hasSelectedForm) {\n            this.props.fetchSelectedForm(this.props.selectedSubmission);\n        }\n    }\n\n    updateAnsvarsomraader(ansvarsomraader) {\n        this.updateFormDataField({\n            ...this.props.selectedForm.formData.ansvarsrett,\n            ansvarsomraader\n        }, 'ansvarsrett')\n    }\n\n    updateFormDataField(value, property) {\n        this.props.updateSelectedForm({\n            ...this.props.selectedForm,\n            formData: {\n                ...this.props.selectedForm.formData,\n                [property]: value\n            }\n        });\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return formData\n            ? (\n                <React.Fragment>\n                    <div className={formsStyle.headerSection}>\n                        <Header content=\"Erklæring om ansvarsrett\"></Header>\n                        <span className={formsStyle.subtitle}>etter plan- og bygningsloven(pbl) § 23-3</span>\n                    </div>\n                    <dl className={`${formsStyle.fieldList} ${formsStyle.inlineFieldList}`}>\n                        <div className={formsStyle.flex50}>\n                            <dt>Kommunens saksnummer (år/sekvensnummer):</dt>\n                            <dd>{formData.kommunensSaksnummer?.saksaar}/{formData.kommunensSaksnummer?.sakssekvensnummer}</dd>\n                        </div>\n                    </dl>\n                    <Paper>\n                        <Header content=\"Eiendom/Byggested\" size={2}></Header>\n                        <EiendomByggested eiendomByggested={formData.eiendomByggested} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Foretak\" size={2}></Header>\n                        <Foretak foretak={formData.ansvarsrett?.foretak} onChange={foretak => this.updateFormDataField(foretak, 'foretak')} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvar i byggeprosjekt\" size={2}></Header>\n                        <AnsvarIByggeProsjekt ansvarsomraader={formData.ansvarsrett.ansvarsomraader} onChange={ansvarsomraader => this.updateAnsvarsomraader(ansvarsomraader)} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvarlig søker\" size={2}></Header>\n                        <AnsvarligSoeker ansvarligSoeker={formData.ansvarligSoeker} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Erklæring\" size={2}></Header>\n                        <Erklaering ansvarsrett={formData.ansvarsrett} onChange={ansvarsrett => this.updateFormDataField(ansvarsrett, 'ansvarsrett')} />\n                    </Paper>\n                </React.Fragment>)\n            : (\n                <p>Henter skjema</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    fetchSelectedForm,\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DistribuertAnsvarsrett);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, Header, InputField } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\n\nclass KontrollErklaeringer extends Component {\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return formData\n            ? (\n                <React.Fragment>\n                    <div className={formsStyle.headerSection}>\n                        <Header content=\"Kontrollerklæring med sluttrapport\"></Header>\n                        <span className={formsStyle.subtitle}>etter plan- og bygningsloven(pbl) § 24-2, jf. SAK 10 § 12-5 og § 14-8</span>\n                        <p>Etter signering blir erklæringen sendt til søker.</p>\n                    </div>\n                    <dl className={`${formsStyle.fieldList} ${formsStyle.inlineFieldList}`}>\n                        <div className={formsStyle.flex50}>\n                            <dt>Kommunens saksnummer (år/sekvensnummer):</dt>\n                            <dd>{formData.kommunensSaksnummer?.saksaar}/{formData.kommunensSaksnummer?.sakssekvensnummer}</dd>\n                        </div>\n                    </dl>\n                    <div className={formsStyle.inputGroup}>\n                        <div className={formsStyle.flex50}>\n                            <InputField\n                                id={`prosjektnavn`}\n                                onChange={event => {\n                                    this.props.updateSelectedForm({\n                                        ...this.props.selectedForm,\n                                        formData: {\n                                            ...formData,\n                                            prosjektnavn: event.target.value\n                                        }\n                                    });\n                                }}\n                                label=\"Prosjektnavn\"\n                                value={formData.prosjektnavn} />\n                        </div>\n                    </div>\n                    <div className={`${formsStyle.buttonRow} ${formsStyle.reverse}`}>\n                        <div></div>\n                        <Link to={{ pathname: 'erklaeringenGjelder', search: window.location.search }}>\n                            <Button color=\"primary\" content=\"Neste\" arrow='right' />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            )\n            : (\n                <p>Ingen data om ansvarlig søker</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KontrollErklaeringer);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, Header, Paper } from 'dibk-design';\n\n// Components\nimport EiendomByggested from 'components/partials/Forms/FormParts/EiendomByggested';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass ErklaeringenGjelder extends Component {\n\n    updateAnsvarsomraader(ansvarsomraader) {\n        this.updateFormDataField({\n            ...this.props.selectedForm.formData.ansvarsrett,\n            ansvarsomraader\n        }, 'ansvarsrett')\n    }\n\n    updateFormDataField(value, property) {\n        this.props.updateSelectedForm({\n            ...this.props.selectedForm,\n            formData: {\n                ...this.props.selectedForm.formData,\n                [property]: value\n            }\n        });\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return formData\n            ? (\n                <React.Fragment>\n                    <Header content=\"Erklæringen gjelder\"></Header>\n                    <Paper>\n                        <Header content=\"Eiendom/Byggested\" size={2}></Header>\n                        <EiendomByggested eiendomByggested={formData.eiendomByggested} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvarlig kontrollerende\" size={2}></Header>\n                        <dl className={formsStyle.fieldList}>\n                            <div className={formsStyle.flex50}>\n                                <dt>Organisasjonsnummer</dt><dd>{formData.foretak?.organisasjonsnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex50}>\n                                <dt>Navn på foretak</dt><dd>{formData.foretak?.navn}</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Kontaktperson</dt><dd>{formData.foretak?.kontaktperson?.navn}</dd>\n                            </div>\n                        </dl>\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvarsområde\" size={2}></Header>\n                        <dl className={formsStyle.fieldList}>\n                            <div className={formsStyle.flex100}>\n                                <dt>Dato for erklært ansvarsrett</dt><dd>{formData.ansvarsrett?.ansvarsrettErklaert}</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Beskrivelse av ansvarsområdet:</dt><dd>{formData.ansvarsrett?.beskrivelseAvAnsvarsomraadet}</dd>\n                            </div>\n                        </dl>\n                    </Paper>\n                    <div className={formsStyle.buttonRow}>\n                        <Link to={{ pathname: 'start', search: window.location.search }}>\n                            <Button color=\"primary\" content=\"Forrige\" arrow='left' />\n                        </Link>\n                        <Link to={{ pathname: 'sluttrapport', search: window.location.search }}>\n                            <Button color=\"primary\" content=\"Neste\" arrow='right' />\n                        </Link>\n                    </div>\n                </React.Fragment>)\n            : (\n                <p>Henter skjema</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErklaeringenGjelder);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, CheckBoxListItem, Header, Paper } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass Sluttrapport extends Component {\n\n    handleOnAnsvarsrettKontrollerendeChange(property) {\n        const formData = this.props.selectedForm?.formData;\n        const value = formData.ansvarsrett?.kontrollerende?.[property];\n        this.props.updateSelectedForm({\n            ...this.props.selectedForm,\n            formData: {\n                ...formData,\n                ansvarsrett: {\n                    ...formData.ansvarsrett,\n                    kontrollerende: {\n                        ...formData.ansvarsrett.kontrollerende,\n                        [property]: !value\n                    }\n                }\n            }\n        });\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return (\n            <React.Fragment>\n                <Header content=\"Sluttrapport for kontroll\"></Header>\n                <Paper>\n                    <p>\n                        Kryss av for om det er funnet avvik og om disse er lukket. Plan for uavhengig kontroll kan legges ved dette skjemaet ved å trykke på 'Oversikt - skjema og vedlegg' øverst til venstre.\n                    </p>\n                    <CheckBoxListItem\n                        id={`ansvarsomraade-avvik-ingen`}\n                        onChange={() => this.handleOnAnsvarsrettKontrollerendeChange('ingenAvvik')}\n                        checked={formData.ansvarsrett?.kontrollerende?.ingenAvvik}>\n                        Ingen avvik er funnet, se vedlagte plan for uavhengig kontroll\n                    </CheckBoxListItem>\n                    <CheckBoxListItem\n                        id={`ansvarsomraade-avvik-observert`}\n                        onChange={() => this.handleOnAnsvarsrettKontrollerendeChange('observerteAvvik')}\n                        checked={formData.ansvarsrett?.kontrollerende?.observerteAvvik}>\n                        Observerte avvik er lukket, se vedlagte plan for uavhengig kontroll\n                    </CheckBoxListItem>\n                    <CheckBoxListItem\n                        id={`ansvarsomraade-avvik-aapne`}\n                        onChange={() => this.handleOnAnsvarsrettKontrollerendeChange('aapneAvvik')}\n                        checked={formData.ansvarsrett?.kontrollerende?.aapneAvvik}>\n                        Åpne avvik er rapportert til kommunen, se vedlagte plan for uavhengig kontroll\n                    </CheckBoxListItem>\n                </Paper>\n                <div className={formsStyle.buttonRow}>\n                    <Link to={{ pathname: 'erklaeringenGjelder', search: window.location.search }}>\n                        <Button color=\"primary\" content=\"Forrige\" arrow='left' />\n                    </Link>\n                    <Link to={{ pathname: 'erklaering', search: window.location.search }}>\n                        <Button color=\"primary\" content=\"Neste\" arrow='right' />\n                    </Link>\n                </div>\n            </React.Fragment>\n        )\n\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sluttrapport);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, CheckBoxListItem, Header, Paper } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\n\nclass Erklaeringer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gjennomfoertKontroll: false\n        }\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return (\n            <React.Fragment>\n                <Header content=\"Erklæring\"></Header>\n                <Paper>\n                    <CheckBoxListItem\n                        id={`erklaering-gjennomfoertKontroll`}\n                        onChange={event => this.props.updateSelectedForm({\n                            ...this.props.selectedForm,\n                            formData: {\n                                ...formData,\n                                erklaeringKontroll: event.target.checked\n                            }\n                        })}\n                        checked={formData.erklaeringKontroll}>\n                        Kontroll er gjennomført på en forskriftsmessig måte. Kontrollforetaket er uavhengig av foretakene som er kontrollert.\n                    </CheckBoxListItem>\n                    <p>\n                        Ansvarlig kontrollerende foretak er kjent med reglene om straff og sanksjoner i plan- og bygningsloven kap.32, og at det kan medføre reaksjoner dersom vi har gitt uriktige opplysninger.\n                    </p>\n                </Paper>\n                <div className={formsStyle.buttonRow}>\n                    <Link to={{ pathname: 'sluttrapport', search: window.location.search }}>\n                        <Button color=\"primary\" content=\"Forrige\" arrow='left' />\n                    </Link>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Erklaeringer);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { WizardNavigation } from 'dibk-design';\n\n// Components\nimport Start from 'components/partials/Forms/KontrollErklaering/Start';\nimport ErklaeringenGjelder from 'components/partials/Forms/KontrollErklaering/ErklaeringenGjelder';\nimport Sluttrapport from 'components/partials/Forms/KontrollErklaering/Sluttrapport';\nimport Erklaering from 'components/partials/Forms/KontrollErklaering/Erklaering';\n\n// Actions\nimport { fetchSelectedForm, updateSelectedForm } from 'actions/FormActions';\n\nclass KontrollErklaeringer extends Component {\n\n    componentDidMount() {\n        if (this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length) {\n            this.props.fetchSelectedForm(this.props.selectedSubmission);\n        }\n    }\n\n    componentDidUpdate() {\n        const hasSelectedSubmission = this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length;\n        const hasSelectedForm = this.props.selectedForm && Object.keys(this.props.selectedForm).length;\n        if (hasSelectedSubmission && !hasSelectedForm) {\n            this.props.fetchSelectedForm(this.props.selectedSubmission);\n        }\n    }\n\n    renderStep(activeStepId) {\n        switch (activeStepId.toLowerCase()) {\n            case 'start':\n                return <Start />\n            case 'erklaeringengjelder':\n                return <ErklaeringenGjelder />\n            case 'sluttrapport':\n                return <Sluttrapport />\n            case 'erklaering':\n                return <Erklaering />\n            default:\n                return activeStepId\n        }\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        const activeStepId = this.props.stepId || 'start';\n        const wizardSteps = {\n            start: {\n                id: 'start',\n                name: 'Start',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'start' }\n            },\n            erklaeringenGjelder: {\n                id: 'erklaeringenGjelder',\n                name: 'Erklæringen gjelder',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'erklaeringenGjelder' }\n            },\n            sluttrapport: {\n                id: 'sluttrapport',\n                name: 'Sluttrapport for kontroll',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'sluttrapport' }\n            },\n            erklaering: {\n                id: 'erklaering',\n                name: 'Erklæring',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'erklaering' }\n            }\n        };\n        return formData\n            ? (\n                <React.Fragment>\n                    <WizardNavigation steps={wizardSteps} activeStepId={activeStepId} />\n                    {this.renderStep(activeStepId)}\n                </React.Fragment>)\n            : (\n                <p>Ingen data om ansvarlig søker</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    fetchSelectedForm,\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KontrollErklaeringer);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, Header, InputField } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass KontrollErklaeringer extends Component {\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return formData\n            ? (\n                <React.Fragment>\n                    <div className={formsStyle.headerSection}>\n                        <Header content=\"Samsvarserklæring\"></Header>\n                        <span className={formsStyle.subtitle}>etter plan -og bygningsloven(pbl) § 23-1, SAK10 kapittel 12</span>\n                        <p>Etter signering blir erklæringen sendt til ansvarlig søker.</p>\n                    </div>\n                    <dl className={`${formsStyle.fieldList} ${formsStyle.inlineFieldList}`}>\n                        <div className={formsStyle.flex50}>\n                            <dt>Kommunens saksnummer (år/sekvensnummer):</dt>\n                            <dd>{formData.kommunensSaksnummer?.saksaar}/{formData.kommunensSaksnummer?.sakssekvensnummer}</dd>\n                        </div>\n                    </dl>\n                    <div className={formsStyle.inputGroup}>\n                        <div className={formsStyle.flex50}>\n\n                            <InputField\n                                id={`prosjektnavn`}\n                                onChange={event => {\n                                    this.props.updateSelectedForm({\n                                        ...this.props.selectedForm,\n                                        formData: {\n                                            ...formData,\n                                            prosjektnavn: event.target.value\n                                        }\n                                    });\n                                }}\n                                label=\"Prosjektnavn\"\n                                value={formData.prosjektnavn} />\n                        </div>\n                    </div>\n                    <div className={`${formsStyle.buttonRow} ${formsStyle.reverse}`}>\n                        <div></div>\n                        <Link to={{ pathname: 'erklaeringenGjelder', search: window.location.search }}>\n                            <Button color=\"primary\" content=\"Neste\" arrow='right' />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            )\n            : (\n                <p>Ingen data for samsvarserklæring</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KontrollErklaeringer);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, Header, Paper } from 'dibk-design';\n\n// Components\nimport EiendomByggested from 'components/partials/Forms/FormParts/EiendomByggested';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\n\nclass ErklaeringenGjelder extends Component {\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n\n        return formData\n            ? (\n                <React.Fragment>\n                    <Header content=\"Erklæringen gjelder\"></Header>\n                    <Paper>\n                        <Header content=\"Eiendom/Byggested\" size={2}></Header>\n                        <EiendomByggested eiendomByggested={formData.eiendomByggested} />\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvarlig foretak\" size={2}></Header>\n                        <dl className={formsStyle.fieldList}>\n                            <div className={formsStyle.flex50}>\n                                <dt>Organisasjonsnummer</dt><dd>{formData.foretak?.organisasjonsnummer}</dd>\n                            </div>\n                            <div className={formsStyle.flex50}>\n                                <dt>Navn på foretak</dt><dd>{formData.foretak?.navn}</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Kontaktperson</dt><dd>{formData.foretak?.kontaktperson?.navn}</dd>\n                            </div>\n                        </dl>\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Ansvarsområde\" size={2}></Header>\n                        <dl className={formsStyle.fieldList}>\n                            <div className={formsStyle.flex100}>\n                                <dt>Funksjon</dt><dd>Ansvarlig prosjektering</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Dato for erklært ansvarsrett</dt><dd>{formData.ansvarsrett?.ansvarsrettErklaert}</dd>\n                            </div>\n                            <div className={formsStyle.flex100}>\n                                <dt>Beskrivelse av ansvarsområdet:</dt><dd>{formData.ansvarsrett?.beskrivelseAvAnsvarsomraadet}</dd>\n                            </div>\n                        </dl>\n                    </Paper>\n                    <div className={formsStyle.buttonRow}>\n                        <Link to={{ pathname: 'start', search: window.location.search }}>\n                            <Button color=\"primary\" content=\"Forrige\" arrow='left' />\n                        </Link>\n                        <Link to={{ pathname: 'gjenstaaendeArbeider', search: window.location.search }}>\n                            <Button color=\"primary\" content=\"Neste\" arrow='right' />\n                        </Link>\n                    </div>\n                </React.Fragment>)\n            : (\n                <p>Henter skjema</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErklaeringenGjelder);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, Header, Paper, RadioButtonListItem } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\n\nclass GjenstaaendeArbeider extends Component {\n\n    handleOnAnsvarsrettProsjekterendeSelect(property) {\n        const formData = this.props.selectedForm?.formData;\n        this.props.updateSelectedForm({\n            ...this.props.selectedForm,\n            formData: {\n                ...formData,\n                ansvarsrett: {\n                    ...formData.ansvarsrett,\n                    prosjekterende: {\n                        ...formData.ansvarsrett.kontrollerende,\n                        okForFerdigattest: property === 'okForFerdigattest',\n                        okForRammetillatelse: property === 'okForRammetillatelse',\n                        okForIgangsetting: property === 'okForIgangsetting',\n                        okForMidlertidigBrukstillatelse: property === 'okForMidlertidigBrukstillatelse'\n                    }\n                }\n            }\n        });\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n\n        return formData ? (\n            <React.Fragment>\n                <Header content=\"Gjenstående arbeider\"></Header>\n                <Paper>\n                    <fieldset className={formsStyle.fieldset}>\n                        <legend>Det er ikke avdekket gjenstående arbeider innenfor arbeidsområdet som er til hinder for å gi:</legend>\n                        <RadioButtonListItem\n                            id={`gjenstaaendeArbeiderTilHinder-rammetillatelse`}\n                            name=\"gjenstaaendeArbeiderTilHinder\"\n                            onChange={() => this.handleOnAnsvarsrettProsjekterendeSelect('okForRammetillatelse')}\n                            checked={formData.ansvarsrett?.prosjekterende?.okForRammetillatelse}\n                            inputValue=\"okForRammetillatelse\">\n                            Rammetillatelse\n                        </RadioButtonListItem>\n                        <RadioButtonListItem\n                            id={`gjenstaaendeArbeiderTilHinder-igangsettingstillatelseEttTrinnsTillatelse`}\n                            name=\"gjenstaaendeArbeiderTilHinder\"\n                            onChange={() => this.handleOnAnsvarsrettProsjekterendeSelect('okForIgangsetting')}\n                            checked={formData.ansvarsrett?.prosjekterende?.okForIgangsetting}\n                            inputValue=\"okForIgangsetting\">\n                            Igangsettingstillatelse/ ett-trinns tillatelse\n                        </RadioButtonListItem>\n                        <RadioButtonListItem\n                            id={`gjenstaaendeArbeiderTilHinder-midlertidigBrukstillatelse`}\n                            name=\"midlertidigBrukstillatelse\"\n                            onChange={() => this.handleOnAnsvarsrettProsjekterendeSelect('okForMidlertidigBrukstillatelse')}\n                            checked={formData.ansvarsrett?.prosjekterende?.okForMidlertidigBrukstillatelse}\n                            inputValue=\"okForMidlertidigBrukstillatelse\">\n                            Midlertidig brukstillatelse\n                        </RadioButtonListItem>\n                        <RadioButtonListItem\n                            id={`gjenstaaendeArbeiderTilHinder-ferdigattest`}\n                            name=\"ferdigattest\"\n                            onChange={() => this.handleOnAnsvarsrettProsjekterendeSelect('okForFerdigattest')}\n                            checked={formData.ansvarsrett?.prosjekterende?.okForFerdigattest}\n                            inputValue=\"okForFerdigattest\">\n                            Ferdigattest\n                        </RadioButtonListItem>\n                    </fieldset>\n                </Paper>\n                <div className={formsStyle.buttonRow}>\n                    <Link to={{ pathname: 'erklaeringenGjelder', search: window.location.search }}>\n                        <Button color=\"primary\" content=\"Forrige\" arrow='left' />\n                    </Link>\n                    <Link to={{ pathname: 'erklaering', search: window.location.search }}>\n                        <Button color=\"primary\" content=\"Neste\" arrow='right' />\n                    </Link>\n                </div>\n            </React.Fragment>\n        ) : ''\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GjenstaaendeArbeider);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// DIBK Design\nimport { Button, Header, Paper, CheckBoxListItem } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass Erklaering extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            samsvarMedTek: false\n        }\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n\n        return formData ? (\n            <React.Fragment>\n                <Header content=\"Erklæring\"></Header>\n                <Paper>\n                    <CheckBoxListItem\n                        id={`erklaering-erTEK10`}\n                        onChange={event => {\n                            this.props.updateSelectedForm({\n                                ...this.props.selectedForm,\n                                formData: {\n                                    ...formData,\n                                    erTEK10: event.target.checked\n                                }\n                            })\n                        }}\n                        checked={formData.erTEK10}>\n                        Vi bekrefter at prosjektering er i samsvar med ytelser i TEK og preaksepterte ytelser (VTEK) eller ved analyse som viser at forskriftens (TEK) funksjonskrav er oppfylt\n                    </CheckBoxListItem>\n                    <p>\n                        Vi bekrefter at kvalitetssikring er utført og dokumentert i henhold til erklæring om ansvarsrett og foretakets kvalitetssikring.\n                    </p>\n                    <p>\n                        Foretaket er kjent med reglene om straff og sanksjoner i plan- og bygnigsloven kap. 32, og at det kan medføre reaksjoner dersom det er gitt uriktige opplysninger.\n                    </p>\n                </Paper>\n                <div className={formsStyle.buttonRow}>\n                    <Link to={{ pathname: 'gjenstaaendeArbeider', search: window.location.search }}>\n                        <Button color=\"primary\" content=\"Forrige\" arrow='left' />\n                    </Link>\n                </div>\n            </React.Fragment>\n        ) : ''\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Erklaering);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { WizardNavigation } from 'dibk-design';\n\n// Components\nimport Start from 'components/partials/Forms/SamsvarsErklaering/Start';\nimport ErklaeringenGjelder from 'components/partials/Forms/SamsvarsErklaering/ErklaeringenGjelder';\nimport GjenstaaendeArbeider from 'components/partials/Forms/SamsvarsErklaering/GjenstaaendeArbeider';\nimport Erklaering from 'components/partials/Forms/SamsvarsErklaering/Erklaering';\n\n// Actions\nimport { fetchSelectedForm, updateSelectedForm } from 'actions/FormActions';\n\nclass KontrollErklaeringer extends Component {\n\n    componentDidMount() {\n        if (this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length) {\n            this.props.fetchSelectedForm(this.props.selectedSubmission);\n        }\n    }\n\n    componentDidUpdate() {\n        const hasSelectedSubmission = this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length;\n        const hasSelectedForm = this.props.selectedForm && Object.keys(this.props.selectedForm).length;\n        if (hasSelectedSubmission && !hasSelectedForm) {\n            this.props.fetchSelectedForm(this.props.selectedSubmission);\n        }\n    }\n\n    renderStep(activeStepId) {\n        switch (activeStepId.toLowerCase()) {\n            case 'start':\n                return <Start />\n            case 'erklaeringengjelder':\n                return <ErklaeringenGjelder />\n            case 'gjenstaaendearbeider':\n                return <GjenstaaendeArbeider />\n            case 'erklaering':\n                return <Erklaering />\n            default:\n                return activeStepId\n        }\n    }\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        const activeStepId = this.props.stepId || 'start';\n        const wizardSteps = {\n            start: {\n                id: 'start',\n                name: 'Start',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'start' }\n            },\n            erklaeringenGjelder: {\n                id: 'erklaeringenGjelder',\n                name: 'Erklæringen gjelder',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'erklaeringenGjelder' }\n            },\n            gjenstaaendeArbeider: {\n                id: 'gjenstaaendeArbeider',\n                name: 'Gjenstående arbeider',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'gjenstaaendeArbeider' }\n            },\n            erklaering: {\n                id: 'erklaering',\n                name: 'Erklæring',\n                finished: false,\n                hasErrors: false,\n                link: { pathname: 'erklaering' }\n            }\n        };\n        return formData\n            ? (\n                <React.Fragment>\n                    <WizardNavigation steps={wizardSteps} activeStepId={activeStepId} />\n                    {this.renderStep(activeStepId)}\n                </React.Fragment>)\n            : (\n                <p>Ingen data for samsvarserklæring</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    fetchSelectedForm,\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(KontrollErklaeringer);\n\n\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// Template\nimport Container from 'components/template/Container';\n\n// Partials\nimport DistribuertAnsvarsrett from 'components/partials/Forms/DistribuertAnsvarsrett';\nimport KontrollErklaering from 'components/partials/Forms/KontrollErklaering';\nimport SamsvarsErklaering from 'components/partials/Forms/SamsvarsErklaering';\n\n// Actions\nimport { fetchSubmission } from 'actions/SubmissionActions';\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: null\n        }\n    }\n\n    componentDidMount() {\n        const submissionId = this.props.match.params.submissionId;\n        if (!this.props.selectedSubmission || !Object.keys(this.props.selectedSubmission).length) {\n            this.props.fetchSubmission(submissionId).then((response) => {\n                const submission = response?.payload || null;\n                this.setState({ submission });\n            });\n        }\n    }\n\n    renderForm(formType, selectedSubmission) {\n        const stepId = this.props.match.params.stepId;\n\n        switch (formType) {\n            case 'Ansvarsrett':\n                return <DistribuertAnsvarsrett selectedSubmission={selectedSubmission} />\n            case 'Kontrollerklaering':\n                return <KontrollErklaering selectedSubmission={selectedSubmission} stepId={stepId} />\n            case 'Samsvarserklaering':\n                return <SamsvarsErklaering selectedSubmission={selectedSubmission} stepId={stepId} />\n            default:\n                return ''\n        }\n    }\n\n\n    render() {\n        const formType = this.props.match.params.formType;\n        const selectedSubmission = this.props.selectedSubmission\n        return selectedSubmission\n            ? (\n                <Container>\n                    {this.renderForm(formType, selectedSubmission)}\n                </Container>)\n            : (\n                <Container>\n                    <p>Henter skjema</p>\n                </Container>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    form: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    fetchSubmission\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\n\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Template\nimport Container from 'components/template/Container';\n\nclass NotFound extends Component {\n\n  render() {\n    return (<Container>\n      <h1>404</h1>\n      <p>Siden finnes ikke</p>\n    </Container>)\n  }\n}\n\nexport default connect(null, null)(NotFound);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { NavigationBar } from 'dibk-design';\n\n\nclass MainNavigationBar extends Component {\n\n  render() {\n    return (<NavigationBar logoLink=\"/dibk.ftpb.broop.front/\" />)\n  }\n}\n\nexport default connect(null, null)(MainNavigationBar);\n","// Dependecies\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport WebFont from 'webfontloader';\n\n// Utils\nimport configureStore, { history } from 'utils/configureStore';\n\n// Routes\nimport Home from 'components/routes/Home';\nimport Form from 'components/routes/Forms/FormType/Form';\nimport NotFound from 'components/routes/NotFound';\n\n// Partials\nimport MainNavigationBar from 'components/partials/MainNavigationBar';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:400,700&display=swap']\n  }\n});\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <ConnectedRouter history={history}>\n        <BrowserRouter basename=\"/dibk.ftpb.broop.front\">\n          <MainNavigationBar />\n          <Switch>\n            <Route exact={true} path=\"/skjema/:formType/:submissionId/:stepId\" render={(props) => (<Form {...props} />)} />\n            <Route exact={true} path=\"/skjema/:formType/:submissionId\" render={(props) => (<Form {...props} />)} />\n            <Route exact={true} path=\"/:submissionId\" render={(props) => (<Home {...props} />)} />\n            <Route exact={true} path=\"/\" render={(props) => (<Home {...props} />)} />\n            <Route render={() => (<NotFound />)} />\n          </Switch>\n        </BrowserRouter>\n      </ConnectedRouter>\n    </Provider>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Component } from 'react';\nimport {load} from \"components/config\";\n\nexport default class ConfigLoader extends Component {\n    constructor(props){\n        super(props);\n        this.state = {isLoaded: false};\n    }\n\n\n  componentDidMount() {\n     // Once the configuration is loaded set `isLoaded` to true so we know to render our component\n     load().then(config =>  this.setState({isLoaded: true, config}));\n  }\n\n  render() {      \n    // If we haven't yet loaded the config, show either a \"splash\" component provided via a `loading` props or return nothing.\n    if(!this.state.isLoaded) {\n        return this.props.loading ? this.props.loading() : null;\n    }\n\n    // The config is loaded so show the component set on the `ready()` props\n    return this.props.ready(this.state.config);\n  }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\nimport ConfigLoader from 'components/ConfigLoader';\n\nclass Main extends Component {\n    render() {\n        return <ConfigLoader ready={() => <App />} />;\n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"Forms_headerSection__1Jsd8\",\"subtitle\":\"Forms_subtitle__9iVjc\",\"fieldList\":\"Forms_fieldList__kV3nu\",\"inlineFieldList\":\"Forms_inlineFieldList__2qwV8\",\"inputGroup\":\"Forms_inputGroup__3Di_h\",\"fieldset\":\"Forms_fieldset__1SjiH\",\"buttonRow\":\"Forms_buttonRow__Mw-h0\",\"reverse\":\"Forms_reverse__TrAva\",\"flexAuto\":\"Forms_flexAuto__3sXRM\",\"flex25\":\"Forms_flex25__2ECxU\",\"flex33\":\"Forms_flex33__1fLcw\",\"flex50\":\"Forms_flex50__3MMK6\",\"flex66\":\"Forms_flex66__180-r\",\"flex75\":\"Forms_flex75__q5a5g\",\"flex100\":\"Forms_flex100__18MUC\"};"],"sourceRoot":""}