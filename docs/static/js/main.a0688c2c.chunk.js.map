{"version":3,"sources":["components/template/Container.module.scss","constants/types.js","reducers/SelectedFormReducer.js","reducers/SelectedSubmissionReducer.js","reducers/index.js","utils/configureStore.js","components/template/Container.js","actions/SubmissionActions.js","components/routes/Home.js","helpers/formatHelpers.js","components/partials/Forms/DistribuertAnsvarsrett.js","actions/FormActions.js","components/routes/Forms/FormType/Form.js","components/routes/NotFound.js","components/partials/MainNavigationBar.js","App.js","serviceWorker.js","components/config.js","components/ConfigLoader.js","index.js","components/partials/Forms/Forms.module.scss"],"names":["module","exports","UPDATE_SELECTED_FORM","FETCH_SUBMISSION","initialState","reducer","state","action","type","payload","reducers","history","combineReducers","router","connectRouter","selectedForm","SelectedFormReducer","selectedSubmission","SelectedSubmissionReducer","createBrowserHistory","composeEnhancers","composeWithDevTools","ContentContainer","className","style","container","this","props","children","Component","connect","fetchSubmission","guid","dispatch","apiUrl","fetch","then","res","json","form","Home","submission","response","setState","Object","keys","length","Container","to","innsendingsType","referanseId","content","mapDispatchToProps","formatAddress","address","formattedAddress","adresselinje1","postnr","poststed","DistribuertAnsvarsrett","formApiUrl","_links","ansvarsrettdistribuert","href","updateSelectedForm","prevProps","hasSelectedSubmission","hasSelectedForm","eiendomByggestedList","map","eiendomByggestedListItem","index","formsStyle","fieldList","eiendomsidentifikasjon","gaardsnummer","bruksnummer","festenummer","seksjonsnummer","bygningsnummer","bolignummer","kommunenummer","adresse","formData","Fragment","size","renderEiendomByggestedList","eiendomByggested","ansvarsrett","foretak","organisasjonsnummer","navn","kontaktperson","mobilnummer","epost","harSentralGodkjenning","Form","submissionId","match","params","formType","renderForm","NotFound","MainNavigationBar","logoLink","WebFont","load","google","families","store","preloadedState","middleware","thunk","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","App","basename","exact","path","render","Boolean","window","location","hostname","config","ConfigLoader","isLoaded","process","result","newconfig","prop","ready","loading","Main","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.a0688c2c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__dTOM0\"};","export const UPDATE_SELECTED_FORM = 'UPDATE_SELECTED_FORM';\nexport const FETCH_SUBMISSION = 'FETCH_SUBMISSION';\n","import { UPDATE_SELECTED_FORM } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_SELECTED_FORM:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","import { FETCH_SUBMISSION } from 'constants/types';\n\nconst initialState = {};\n\nconst reducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase FETCH_SUBMISSION:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default reducer;\n","// Dependencies\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\n// Reducers\nimport SelectedFormReducer from 'reducers/SelectedFormReducer';\nimport SelectedSubmissionReducer from 'reducers/SelectedSubmissionReducer';\n\nconst reducers = history => combineReducers({\n  router: connectRouter(history),\n  selectedForm: SelectedFormReducer,\n  selectedSubmission: SelectedSubmissionReducer\n});\n\nexport default reducers;\n","// Dependencies\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\n// Reducers\nimport createRootReducer from 'reducers';\n\n\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunk];\n  const history = createBrowserHistory();\n  const store = createStore(\n\t\tcreateRootReducer(history),\n\t\tpreloadedState,\n\t\tcomposeEnhancers(\n\t\t\tapplyMiddleware(\n\t\t\t\t...middleware,\n\t\t\t\trouterMiddleware(history)\n\t\t\t)\n\t\t)\n\t);\n  return store;\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Stylesheets\nimport style from 'components/template/Container.module.scss';\n\nclass ContentContainer extends Component {\n\n  render() {\n    return (<div className={style.container}>\n      {this.props.children}\n    </div>)\n  }\n}\n\nexport default connect(null, null)(ContentContainer);\n","import { FETCH_SUBMISSION} from 'constants/types';\n\nexport const fetchSubmission = (guid) => dispatch => {\n    const apiUrl = `https://dibk-ftpb-broop-api.azurewebsites.net/api/v1/Innsending?referanseId=${guid}`\n    return fetch(apiUrl).then(res => res.json()).then(form => {\n        return dispatch({ type: FETCH_SUBMISSION, payload: form })\n    });\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n\n// DIBK Design\nimport { Button } from 'dibk-design';\n\n// Template\nimport Container from 'components/template/Container';\n\n// Actions\nimport { fetchSubmission } from 'actions/SubmissionActions';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submission: null\n    }\n  }\n\n  componentDidMount() {\n    const guid = '24E4920B-DEA0-462E-A481-6F061D3EB2EA'\n    this.props.fetchSubmission(guid).then((response) => {\n      const submission = response?.payload || null;\n      this.setState({ submission });\n    });\n  }\n\n  render() {\n    const submission = this.state.submission;\n    return submission && Object.keys(submission).length \n    ? (<Container>\n      <h1>Home</h1>\n      <Link to={`/Skjema/${submission.innsendingsType}/${submission.referanseId}/`}>\n        <Button content={submission.innsendingsType}></Button>\n      </Link>\n    </Container>)\n    : ''\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  fetchSubmission\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","export const formatAddress = (address) => {\n    let formattedAddress = '';\n    if (address.adresselinje1) {\n        formattedAddress += address.adresselinje1;\n        if (address.postnr || address.poststed) {\n            formattedAddress += ', ';\n        }\n    }\n    if (address.postnr) {\n        formattedAddress += address.postnr;\n        if (address.poststed) {\n            formattedAddress += ' '\n        }\n    }\n    if (address.poststed) {\n        formattedAddress += address.poststed\n    }\n\n    return formattedAddress;\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { Header, Paper } from 'dibk-design';\n\n// Actions\nimport { updateSelectedForm } from 'actions/FormActions';\n\n// Helpers\nimport { formatAddress } from 'helpers/formatHelpers';\n\n// Stylesheets\nimport formsStyle from 'components/partials/Forms/Forms.module.scss';\n\nclass DistribuertAnsvarsrett extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length) {\n            const formApiUrl = this.props.selectedSubmission?._links?.ansvarsrettdistribuert?.href;\n            fetch(`https://dibk-ftpb-broop-api.azurewebsites.net${formApiUrl}`).then(res => res.json()).then(form => {\n                this.props.updateSelectedForm(form);\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const hasSelectedSubmission = this.props.selectedSubmission && Object.keys(this.props.selectedSubmission).length;\n        const hasSelectedForm = this.props.selectedForm && Object.keys(this.props.selectedForm).length;\n        if (hasSelectedSubmission && !hasSelectedForm) {\n            const formApiUrl = this.props.selectedSubmission?._links?.ansvarsrettdistribuert?.href;\n            fetch(`https://dibk-ftpb-broop-api.azurewebsites.net${formApiUrl}`).then(res => res.json()).then(form => {\n                this.props.updateSelectedForm(form);\n            });\n        }\n    }\n\n    renderEiendomByggestedList(eiendomByggestedList) {\n        return eiendomByggestedList.map((eiendomByggestedListItem, index) => {\n            return (\n                <div key={index}>\n                    <dl className={formsStyle.fieldList}>\n                        <div>\n                            <dt>Gårdsnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.gaardsnummer}</dd>\n                        </div>\n                        <div>\n                            <dt>Bruksnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.bruksnummer}</dd>\n                        </div>\n                        <div>\n                            <dt>Festenr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.festenummer}</dd>\n                        </div>\n                        <div>\n                            <dt>Seksjonsnr.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.seksjonsnummer}</dd>\n                        </div>\n                    </dl>\n                    <dl className={formsStyle.fieldList}>\n                        <div>\n                            <dt>Bygningsnr.</dt><dd>{eiendomByggestedListItem.bygningsnummer}</dd>\n                        </div>\n                        <div>\n                            <dt>Bolignr.</dt><dd>{eiendomByggestedListItem.bolignummer}</dd>\n                        </div>\n                    </dl>\n                    <dl className={formsStyle.fieldList}>\n                        <div>\n                            <dt>Kommunenummer.</dt><dd>{eiendomByggestedListItem.eiendomsidentifikasjon?.kommunenummer}</dd>\n                        </div>\n                    </dl>\n                    <dl className={formsStyle.fieldList}>\n                        <div>\n                            <dt>Adresse</dt><dd>{formatAddress(eiendomByggestedListItem.adresse)}</dd>\n                        </div>\n                    </dl>\n                </div>\n            )\n        })\n    }\n\n\n    render() {\n        const formData = this.props.selectedForm?.formData;\n        return formData\n            ? (\n                <React.Fragment>\n                    <Paper>\n                        <Header content=\"Eiendom/Byggested\" size={2}></Header>\n                        {this.renderEiendomByggestedList(formData?.eiendomByggested)}\n                    </Paper>\n                    <Paper>\n                        <Header content=\"Foretak\" size={2}></Header>\n                        <dl className={formsStyle.fieldList}>\n                            <div>\n                                <dt>Organisasjonsnummer</dt><dd>{formData?.ansvarsrett?.foretak?.organisasjonsnummer}</dd>\n                            </div>\n                            <div>\n                                <dt>Navn</dt><dd>{formData?.ansvarsrett?.foretak?.navn}</dd>\n                            </div>\n                        </dl>\n                        <dl className={formsStyle.fieldList}>\n                            <div>\n                                <dt>Adresse</dt><dd>{formData?.ansvarsrett?.foretak?.adresse?.adresselinje1}</dd>\n                            </div>\n                            <div>\n                                <dt>Postnr.</dt><dd>{formData?.ansvarsrett?.foretak?.adresse?.postnr}</dd>\n                            </div>\n                            <div>\n                                <dt>Poststed</dt><dd>{formData?.ansvarsrett?.foretak?.adresse?.poststed}</dd>\n                            </div>\n                        </dl>\n                        <dl className={formsStyle.fieldList}>\n                            <div>\n                                <dt>Kontaktperson</dt><dd>{formData?.ansvarsrett?.foretak?.kontaktperson?.navn}</dd>\n                            </div>\n                            <div>\n                                <dt>Mobiltelefon</dt><dd>{formData?.ansvarsrett?.foretak?.kontaktperson?.mobilnummer}</dd>\n                            </div>\n                            <div>\n                                <dt>Epost</dt><dd>{formData?.ansvarsrett?.foretak?.kontaktperson?.epost}</dd>\n                            </div>\n                        </dl>\n\n                        <p>\n                            <b>\n                                {\n                                    formData?.ansvarsrett?.foretak?.harSentralGodkjenning\n                                        ? 'Foretaket har sentral godkjenning'\n                                        : 'Foretaket har ikke sentral godkjenning'\n                                }\n                            </b>\n                        </p>\n                    </Paper>\n                </React.Fragment>)\n            : (\n                <p>Henter skjema</p>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    selectedForm: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    updateSelectedForm\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DistribuertAnsvarsrett);\n\n\n","import { UPDATE_SELECTED_FORM } from 'constants/types';\n\nexport const updateSelectedForm = (form) => dispatch => {\n    return dispatch({ type: UPDATE_SELECTED_FORM, payload: form })\n}\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { Header } from 'dibk-design';\n\n// Template\nimport Container from 'components/template/Container';\n\n// Partials\nimport DistribuertAnsvarsrett from 'components/partials/Forms/DistribuertAnsvarsrett';\n\n// Actions\nimport { fetchSubmission } from 'actions/SubmissionActions';\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: null\n        }\n    }\n\n    componentDidMount() {\n        const submissionId = this.props.match.params.submissionId;\n        if (!this.props.submission || Object.keys(!this.props.submission).length) {\n            this.props.fetchSubmission(submissionId).then((response) => {\n                const submission = response?.payload || null;\n                this.setState({ submission });\n            });\n        }\n    }\n\n    renderForm(formType, selectedSubmission) {\n        switch (formType) {\n            case 'DistribuertAnsvarsrett':\n                return <DistribuertAnsvarsrett selectedSubmission={selectedSubmission} />\n            default:\n                return ''\n        }\n    }\n\n\n    render() {\n        const formType = this.props.match.params.formType;\n        const selectedSubmission = this.props.selectedSubmission\n        return selectedSubmission\n            ? (\n                <Container>\n                    <Header content={formType} />\n                    {this.renderForm(formType, selectedSubmission)}\n                </Container>)\n            : (\n                <Container>\n                    <p>Henter skjema</p>\n                </Container>\n            )\n    }\n}\n\nconst mapStateToProps = state => ({\n    selectedSubmission: state.selectedSubmission,\n    form: state.selectedForm\n});\n\nconst mapDispatchToProps = {\n    fetchSubmission\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\n\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Template\nimport Container from 'components/template/Container';\n\nclass NotFound extends Component {\n\n  render() {\n    return (<Container>\n      <h1>404</h1>\n      <p>Siden finnes ikke</p>\n    </Container>)\n  }\n}\n\nexport default connect(null, null)(NotFound);\n","// Dependencies\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DIBK Design\nimport { NavigationBar } from 'dibk-design';\n\n\nclass MainNavigationBar extends Component {\n\n  render() {\n    return (<NavigationBar logoLink=\"/\" />)\n  }\n}\n\nexport default connect(null, null)(MainNavigationBar);\n","// Dependecies\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport WebFont from 'webfontloader';\n\n// Utils\nimport configureStore, { history } from 'utils/configureStore';\n\n// Routes\nimport Home from 'components/routes/Home';\nimport Form from 'components/routes/Forms/FormType/Form';\nimport NotFound from 'components/routes/NotFound';\n\n// Partials\nimport MainNavigationBar from 'components/partials/MainNavigationBar';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:400,700&display=swap']\n  }\n});\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <ConnectedRouter history={history}>\n        <BrowserRouter basename=\"/dibk.ftpb.broop.front\">\n          <MainNavigationBar />\n          <Switch>\n            <Route exact={true} path=\"/skjema/:formType/:submissionId\" render={(props) => (<Form {...props} />)} />\n            <Route exact={true} path=\"/:submissionId\" render={(props) => (<Home {...props} />)} />\n            <Route exact={true} path=\"/\" render={(props) => (<Home {...props} />)} />\n            <Route render={() => (<NotFound />)} />\n          </Switch>\n        </BrowserRouter>\n      </ConnectedRouter>\n    </Provider>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const config = {};\nexport default config;\n\nfunction load() {\n    return fetch(`${process.env.PUBLIC_URL || ''}/config.json`)\n    .then(result => result.json())\n    .then((newconfig) => {\n        for(let prop in config) {\n            delete config[prop]\n        }\n        for(let prop in newconfig) {\n            config[prop] = newconfig[prop]\n        }\n        return config;\n    });\n}\nexport {load}","import { Component } from 'react';\nimport {load} from \"components/config\";\n\nexport default class ConfigLoader extends Component {\n    constructor(props){\n        super(props);\n        this.state = {isLoaded: false};\n    }\n\n\n  componentDidMount() {\n     // Once the configuration is loaded set `isLoaded` to true so we know to render our component\n     load().then(config =>  this.setState({isLoaded: true, config}));\n  }\n\n  render() {      \n    // If we haven't yet loaded the config, show either a \"splash\" component provided via a `loading` props or return nothing.\n    if(!this.state.isLoaded) {\n        return this.props.loading ? this.props.loading() : null;\n    }\n\n    // The config is loaded so show the component set on the `ready()` props\n    return this.props.ready(this.state.config);\n  }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\nimport ConfigLoader from 'components/ConfigLoader';\n\nclass Main extends Component {\n    render() {\n        return <ConfigLoader ready={() => <App />} />;\n    }\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldList\":\"Forms_fieldList__kV3nu\"};"],"sourceRoot":""}